<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.PsiFeatures.UIInteractive.Core</name>
    </assembly>
    <members>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.CodeCompletion.Lookup.Lookup">
            <summary>
            Form which is used to display list of lookup items
            </summary>
        </member>
        <member name="E:JetBrains.PsiFeatures.UIInteractive.Core.CodeCompletion.Lookup.Lookup.CurrentItemChanged">
            <summary>
              Event which is raised when the current item changes
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.CodeCompletion.Lookup.LookupWindowManager">
            <summary>
            Manages currently shown lookup window
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.CodeCompletion.Lookup.LookupWindowManager.IsExternalDocumentChangeAllowed">
            <summary>
            If this flag is set, any document change doesn't cancel code completion
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.CodeCompletion.Lookup.LookupWindowManager.JetBrains#ReSharper#Feature#Services#Lookup#ILookupWindowManager#UIAplication">
            <inheritdoc />
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.CodeCompletion.Lookup.VirtualLookupWindow.AutoActivate">
            <summary>
              Gets or sets whether the control should be activated initially when it's shown.
              The typical implementation for a form is to return a negative of this value from the
              <see cref="P:System.Windows.Forms.Form.ShowWithoutActivation" /> override.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.CodeCompletion.Lookup.VirtualLookupWindow.CurrentItemBounds">
            <summary>
              Gets bounds of the current item
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit">
            <summary>
            An edit-like control for placing on the dialog boxes that picks a type name from a tree or completion list.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CommitCompletionListInputString">
            <summary>
            Immediately commits the <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.Text"/> to the completion lists's model.
            Wired to the deferred binding when the completion list menu is lazy-created.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListExecuteSelectedItem">
            <summary>
            Exec sel menu item, if any.
            Returns exec success flag (<see cref="M:JetBrains.Application.UI.Controls.JetPopupMenu.Detail.JetPopupMenuDoc.ExecuteSelectedItem"/>).
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListSelectNextItem">
            <summary>
            Selects the next item in the completion drop-down list, eg when up/down arrows are used in the edit box.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.IsCompletionListVisible">
            <summary>
            Gets whether we've ruled out that the completion list should be visible at the moment.
            This means <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowMode"/> is <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowModes.Show"/> and the <see cref="F:JetBrains.ReSharper.Feature.Services.UI.CompletionPicker.CompletionPickerSettings.CompletionModel"/>'s <see cref="F:JetBrains.Application.UI.Controls.GotoByName.GotoByNameModel.Items"/> are not empty (and the model exists, in the first place).
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.myEvtUpdateTextBeforeCaret">
            <summary>
            As we can't (so it seems) get the event of caret movement in the edit box, we'd udpate it every so often. Probably the caret position can't change without a Windows message on the control, so we'd apply the change after each message, with a small delay needed just to group multiple consequent messages together.
            GEvent is better than BeginInvoke because the latter adds to the messages itself and cannot guarantee all fo the dependent messages go thru before it executes.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CaretPosition">
            <summary>
            Gives out the current caret position in the edit box, or the selection start position.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowMode">
            <summary>
            Whether the completion list is allowed to be shown at the moment. Other filters could apply (eg will not be actually visible if there are no items).
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.Settings">
            <summary>
            Gets or sets the settings that define the behavior of the picker, like what it picks and which functionality is available.
            Can be set only once.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.Text">
            <summary>
            Gets or sets the text of the editbox the user is typing.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.TextBeforeCaret">
            <summary>
            Gets or sets the text of the editbox the user is typing, up to the current caret position or the selection start. Could be used as the completion prefix.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.ExecuteCompletionListItem(JetBrains.Application.UI.Controls.JetPopupMenu.Detail.JetPopupMenuItem)">
            <summary>
            If menu is shown, selects the given item and applies its text.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListHide(JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowModeTransition)">
            <summary>
            Hides the completion list, either the soft or the hard way.
            Modifies <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowMode"/> based on its present value and the <paramref name="flag"/>.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShow(JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowModeTransition)">
            <summary>
            Shows the completion list, either the soft or the hard way.
            Modifies <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowMode"/> based on its present value and the <paramref name="flag"/>.
            Eg a soft-show won't actually show if currently in <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowModes.HideHard"/> mode.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.Init_CompletionList_LazyCreate(System.IDisposable,JetBrains.Application.UI.Tooltips.ITooltipManager,JetBrains.Application.StdApplicationUI.IMainWindow,JetBrains.Application.Interop.NativeHook.IWindowsHookManager,JetBrains.Application.UI.PopupLayout.IMainWindowPopupWindowContext,JetBrains.UI.PopupLayout.PopupWindowManager,JetBrains.Application.UI.Components.Theming.ITheming)">
            <summary>
            Implements menu lazy-creation. Does nothing if already created.
            </summary>
            <param name="disLazyCreate">Disconnects from lazy creation, making sure it actually runs only once.</param>
            <param name="tooltipman"> </param>
            <param name="mainWindow"> </param>
            <param name="windowsHookManager"> </param>
            <param name="mainWindowPopupWindowContext"> </param>
            <param name="popupWindowManager"> </param>
            <param name="theming"> </param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.OnCompletionOrPickerTextApplied">
            <summary>
            Called after:
            • User executes an item in the completion list and some new text is applied to the editbox.
            • User executes an item in the picker tree drop-down and some text is applied to the editbox.
            Normally, selects the new text and sets focus to the editbox.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Layout"></see> event.
            </summary>
            
            <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs"></see> that contains the event data. </param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LostFocus"></see> event.
            </summary>
            
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data. </param>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowModeTransition">
            <summary>
            Flag for transitioning between <see cref="T:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowModes"/>.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowModeTransition.Soft">
            <summary>
            Switches softly, cannot break <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowModes.HideHard"/>. This is for handling implicit activities.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowModeTransition.Hard">
            <summary>
            Switches forcibly, always transitions to the desired state. Must be done on explicit user actions only.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowModes">
            <summary>
            Whether the completion list is allowed to be shown at the moment. Other filters could apply (eg will not be actually visible if there are no items).
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowModes.Show">
            <summary>
            The completion list could be visible if other factors (like items>0) are met.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowModes.HideSoft">
            <summary>
            The completion list has been hidden indeliberately, and should transition to <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowModes.Show"/> when there's an excuse.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit.CompletionListShowModes.HideHard">
            <summary>
            The completion list has been focibly hidden. Should not show again unless explicitly requested by the user.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf">
            <summary>
            An edit-like control for placing on the dialog boxes that picks a type name from a tree or completion list.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CommitCompletionListInputString">
            <summary>
            Immediately commits the <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.Text"/> to the completion lists's model.
            Wired to the deferred binding when the completion list menu is lazy-created.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListExecuteSelectedItem">
            <summary>
            Exec sel menu item, if any.
            Returns exec success flag (<see cref="M:JetBrains.Application.UI.Controls.JetPopupMenu.Detail.JetPopupMenuDoc.ExecuteSelectedItem"/>).
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListSelectNextItem">
            <summary>
            Selects the next item in the completion drop-down list, eg when up/down arrows are used in the edit box.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.IsCompletionListVisible">
            <summary>
            Gets whether we've ruled out that the completion list should be visible at the moment.
            This means <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowMode"/> is <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowModes.Show"/> and the <see cref="F:JetBrains.ReSharper.Feature.Services.UI.CompletionPicker.CompletionPickerSettings.CompletionModel"/>'s <see cref="F:JetBrains.Application.UI.Controls.GotoByName.GotoByNameModel.Items"/> are not empty (and the model exists, in the first place).
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.myEvtUpdateTextBeforeCaret">
            <summary>
            As we can't (so it seems) get the event of caret movement in the edit box, we'd udpate it every so often. Probably the caret position can't change without a Windows message on the control, so we'd apply the change after each message, with a small delay needed just to group multiple consequent messages together.
            GEvent is better than BeginInvoke because the latter adds to the messages itself and cannot guarantee all fo the dependent messages go thru before it executes.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CaretPosition">
            <summary>
            Gives out the current caret position in the edit box, or the selection start position.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowMode">
            <summary>
            Whether the completion list is allowed to be shown at the moment. Other filters could apply (eg will not be actually visible if there are no items).
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.Settings">
            <summary>
            Gets or sets the settings that define the behavior of the picker, like what it picks and which functionality is available.
            Can be set only once.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.Text">
            <summary>
            Gets or sets the text of the editbox the user is typing.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.TextBeforeCaret">
            <summary>
            Gets or sets the text of the editbox the user is typing, up to the current caret position or the selection start. Could be used as the completion prefix.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.ExecuteCompletionListItem(JetBrains.Application.UI.Controls.JetPopupMenu.Detail.JetPopupMenuItem)">
            <summary>
            If menu is shown, selects the given item and applies its text.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListHide(JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowModeTransition)">
            <summary>
            Hides the completion list, either the soft or the hard way.
            Modifies <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowMode"/> based on its present value and the <paramref name="flag"/>.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShow(JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowModeTransition)">
            <summary>
            Shows the completion list, either the soft or the hard way.
            Modifies <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowMode"/> based on its present value and the <paramref name="flag"/>.
            Eg a soft-show won't actually show if currently in <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowModes.HideHard"/> mode.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.Init_CompletionList_LazyCreate(System.IDisposable,JetBrains.Application.UI.Tooltips.ITooltipManager,JetBrains.Application.StdApplicationUI.IMainWindow,JetBrains.Application.Interop.NativeHook.IWindowsHookManager,JetBrains.Application.UI.PopupLayout.IMainWindowPopupWindowContext,JetBrains.UI.PopupLayout.PopupWindowManager,JetBrains.Application.UI.Components.Theming.ITheming)">
            <summary>
            Implements menu lazy-creation. Does nothing if already created.
            </summary>
            <param name="disLazyCreate">Disconnects from lazy creation, making sure it actually runs only once.</param>
            <param name="tooltipman"> </param>
            <param name="mainWindow"> </param>
            <param name="windowsHookManager"> </param>
            <param name="mainWindowPopupWindowContext"> </param>
            <param name="popupWindowManager"> </param>
            <param name="theming"> </param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.OnCompletionOrPickerTextApplied">
            <summary>
            Called after:
            • User executes an item in the completion list and some new text is applied to the editbox.
            • User executes an item in the picker tree drop-down and some text is applied to the editbox.
            Normally, selects the new text and sets focus to the editbox.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowModeTransition">
            <summary>
            Flag for transitioning between <see cref="T:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowModes"/>.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowModeTransition.Soft">
            <summary>
            Switches softly, cannot break <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowModes.HideHard"/>. This is for handling implicit activities.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowModeTransition.Hard">
            <summary>
            Switches forcibly, always transitions to the desired state. Must be done on explicit user actions only.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowModes">
            <summary>
            Whether the completion list is allowed to be shown at the moment. Other filters could apply (eg will not be actually visible if there are no items).
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowModes.Show">
            <summary>
            The completion list could be visible if other factors (like items>0) are met.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowModes.HideSoft">
            <summary>
            The completion list has been hidden indeliberately, and should transition to <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowModes.Show"/> when there's an excuse.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEditWpf.CompletionListShowModes.HideHard">
            <summary>
            The completion list has been focibly hidden. Should not show again unless explicitly requested by the user.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerPopupDialog">
            <summary>
            A self-contained popup type chooser that can be employed in case you'd like to use the <see cref="T:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit"/>, but have no place to host it as a control and want to show it in a popup dialog.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerPopupDialog.LabelText">
            <summary>
            Gets or sets the text displayed on the label.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerPopupDialog.Settings">
            <summary>
            Gets or sets the settings that define the behavior of the picker, like what it picks and which functionality is available.
            Can be set only once.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerPopupDialog.TypeChooserText">
            <summary>
            Gets or sets the text contents of the type chooser.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerPopupDialog.OnVisibleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged"></see> event.
            </summary>
            
            <param name="e">The <see cref="T:System.EventArgs"></see> that contains the event data. </param>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf">
            <summary>
            An edit-like control for placing on the dialog boxes that picks a type name from a tree or completion list.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CommitCompletionListInputString">
            <summary>
            Immediately commits the <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.Text"/> to the completion lists's model.
            Wired to the deferred binding when the completion list menu is lazy-created.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListExecuteSelectedItem">
            <summary>
            Exec sel menu item, if any.
            Returns exec success flag (<see cref="M:JetBrains.Application.UI.Controls.JetPopupMenu.Detail.JetPopupMenuDoc.ExecuteSelectedItem"/>).
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListSelectNextItem">
            <summary>
            Selects the next item in the completion drop-down list, eg when up/down arrows are used in the edit box.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.IsCompletionListVisible">
            <summary>
            Gets whether we've ruled out that the completion list should be visible at the moment.
            This means <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowMode"/> is <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowModes.Show"/> and the <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionPickerSettings.CompletionModel"/>'s <see cref="F:JetBrains.Application.UI.Controls.GotoByName.GotoByNameModel.Items"/> are not empty (and the model exists, in the first place).
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.myEvtUpdateTextBeforeCaret">
            <summary>
            As we can't (so it seems) get the event of caret movement in the edit box, we'd udpate it every so often. Probably the caret position can't change without a Windows message on the control, so we'd apply the change after each message, with a small delay needed just to group multiple consequent messages together.
            GEvent is better than BeginInvoke because the latter adds to the messages itself and cannot guarantee all fo the dependent messages go thru before it executes.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CaretPosition">
            <summary>
            Gives out the current caret position in the edit box, or the selection start position.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowMode">
            <summary>
            Whether the completion list is allowed to be shown at the moment. Other filters could apply (eg will not be actually visible if there are no items).
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.Settings">
            <summary>
            Gets or sets the settings that define the behavior of the picker, like what it picks and which functionality is available.
            Can be set only once.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.Text">
            <summary>
            Gets or sets the text of the editbox the user is typing.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.TextBeforeCaret">
            <summary>
            Gets or sets the text of the editbox the user is typing, up to the current caret position or the selection start. Could be used as the completion prefix.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.ExecuteCompletionListItem(JetBrains.Application.UI.Controls.JetPopupMenu.Detail.JetPopupMenuItem)">
            <summary>
            If menu is shown, selects the given item and applies its text.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListHide(JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowModeTransition)">
            <summary>
            Hides the completion list, either the soft or the hard way.
            Modifies <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowMode"/> based on its present value and the <paramref name="flag"/>.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShow(JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowModeTransition)">
            <summary>
            Shows the completion list, either the soft or the hard way.
            Modifies <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowMode"/> based on its present value and the <paramref name="flag"/>.
            Eg a soft-show won't actually show if currently in <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowModes.HideHard"/> mode.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.Init_CompletionList_LazyCreate">
            <summary>
            Implements menu lazy-creation. Does nothing if already created.
            </summary>
            <param name="disLazyCreate">Disconnects from lazy creation, making sure it actually runs only once.</param>
            <param name="tooltipman"> </param>
            <param name="mainWindow"> </param>
            <param name="windowsHookManager"> </param>
            <param name="mainWindowPopupWindowContext"> </param>
            <param name="popupWindowManager"> </param>
            <param name="theming"> </param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.OnCompletionOrPickerTextApplied">
            <summary>
            Called after:
            • User executes an item in the completion list and some new text is applied to the editbox.
            • User executes an item in the picker tree drop-down and some text is applied to the editbox.
            Normally, selects the new text and sets focus to the editbox.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowModeTransition">
            <summary>
            Flag for transitioning between <see cref="T:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowModes"/>.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowModeTransition.Soft">
            <summary>
            Switches softly, cannot break <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowModes.HideHard"/>. This is for handling implicit activities.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowModeTransition.Hard">
            <summary>
            Switches forcibly, always transitions to the desired state. Must be done on explicit user actions only.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowModes">
            <summary>
            Whether the completion list is allowed to be shown at the moment. Other filters could apply (eg will not be actually visible if there are no items).
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowModes.Show">
            <summary>
            The completion list could be visible if other factors (like items>0) are met.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowModes.HideSoft">
            <summary>
            The completion list has been hidden indeliberately, and should transition to <see cref="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowModes.Show"/> when there's an excuse.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionEditWpf.CompletionListShowModes.HideHard">
            <summary>
            The completion list has been focibly hidden. Should not show again unless explicitly requested by the user.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionPickerSettings">
            <summary>
            Specifies the configuration for the <see cref="T:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit"/> control.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionPickerSettings.CompletionModel">
            <summary>
            Gets or sets the flat model that works for completing the text you type into the control.
            Can be set only once.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionPickerSettings.ExpandPickerItem">
            <summary>
            When the tree picker is building its model, supplies the items for the next level.
            Fill the <see cref="P:JetBrains.DataFlow.InOutEventArgs`2.Out"/> list with the children of <see cref="P:JetBrains.DataFlow.InOutEventArgs`2.In"/>, who must not be <c>Null</c>.
            When <see cref="P:JetBrains.DataFlow.InOutEventArgs`2.In"/> is <c>Null</c>, root items are requested. 
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionPickerSettings.IsSelectingAllTextOnCompletion">
            <summary>
            When user executes a completion list item or a picker tree item and its text is planted into the editbox (replacing any existing selection), determines whether the whole contents of the edit box is selected.
            The default is <c>True</c>, which helps with correcting any mistaken selection. <c>False</c> is recommended when you implement sequential completion.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionPickerSettings.PickerItemPresenter">
            <summary>
            Gets or sets the presenter for the picker (drop-down tree) items.
            This value can only be set once.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionPickerSettings.TranslateCompletionItem">
            <summary>
            When a completion list item is executed, its text is inserted into the edit box.
            In case the text should be modified before insertion (eg FQN instead of a short name), this event should be sinked.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionPickerSettings.TranslatePickerItem">
            <summary>
            When a picker tree item is executed, its text is inserted into the edit box.
            In case the text should be modified before insertion (eg FQN instead of a short name), this event should be sinked.
            Setting the <see cref="P:JetBrains.DataFlow.InOutEventArgs`2.Out"/> to <c>Null</c> prevents the item from being picked (eg for group nodes that are only present to hold the child elements).
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Controls.CompletionPickerSettings.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.Controls.TextBoxViewControl">
            <summary>
            TextBoxViewControl
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Controls.TextBoxViewControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.DevExpressTreeControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.DevExpressTreeControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.ICellRenderer.Render(System.Drawing.Graphics,System.Drawing.Rectangle,System.Object,JetBrains.UI.RenderParams,System.Boolean)">
            <param name="isAnimationSupported"><c>True</c> if you commit to calling this method periodically so that the renderer painted time-dependent animation frames. <c>False</c> means the renderer should not be expecting repaints with enough framerate, and should always yield the same static image.</param>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.ITreeCellPresentation">
            <summary>
            Presentation of the tree node cell
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.NodePainter.RowBackColor(JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.DevExpressTreeNode)">
            <summary>
            Get the color to paint the background of node cell
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.NodePainter.Paint(JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.ITreeCellPresentation,System.Boolean,System.Boolean,DevExpress.XtraTreeList.CustomDrawNodeCellEventArgs)">
            <summary>
            Do custom painting of the node in SolutionExplorer tree
            </summary>
            <param name="cell"></param>
            <param name="selected"><c>true</c> if node is selected</param>
            <param name="focused"></param>
            <param name="args"></param>
            <returns><c>true</c> if node was painted. <c>false</c> for default painting </returns>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.NodePainter.GetCellHeight(JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.ITreeCellPresentation,System.Drawing.Graphics)">
            <summary>
            Calculates the height (in pixels) of given node in the tree
            </summary>
            <param name="cell"></param>
            <param name="graphics"></param>
            <returns></returns>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.NodePainter.GetCellWidth(JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.ITreeCellPresentation,System.Drawing.Graphics)">
            <summary>
            Calculates the drawn width of the node in the tree
            </summary>
            <param name="cell"></param>
            <param name="graphics"></param>
            <returns></returns>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.NodePainter.ImageHitTest(JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.DevExpressTreeNode,System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Rectangle@)">
             <summary>
             Get the node image over which currently mouse is located
             </summary>
             <param name="node"></param>
             <param name="cellBounds"></param>
             <param name="pos"></param>
             <returns></returns>
            <param name="imageRect"></param>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.SplittedContainer.ThemedIconManager">
            <summary>
            Null during virtual calls from base ctor.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.SplittedPanel.Owner">
            <summary>
            Null during virtual calls from base ctor.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeControlNodeAnchoringRect">
            <summary>
            Anchors to the focused node or a manually specified node in the given tree model view.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeControlNodeAnchoringRect.myNode">
            <summary>
            <c>Null</c> if tracking selection.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeControlNodeAnchoringRect.myTreeControl">
            <summary>
            <c>Null</c> only when disposed.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeControlNodeAnchoringRect.#ctor(JetBrains.DataFlow.Lifetime,DevExpress.XtraTreeList.TreeList,DevExpress.XtraTreeList.Nodes.TreeListNode)">
            <summary>
            Creates the instance.
            </summary>
            <param name="lifetime"></param>
            <param name="treeControl">The owning tree model view.</param>
            <param name="node">The node to anchor to.</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeControlNodeAnchoringRect.#ctor(JetBrains.DataFlow.Lifetime,DevExpress.XtraTreeList.TreeList,DevExpress.XtraTreeList.Nodes.TreeListNode,DevExpress.XtraTreeList.Columns.TreeListColumn,System.Boolean)">
            <summary>
            An internal ctor that allows for <c>Null</c> nodes for tracking the selection.
            </summary>
            <param name="lifetime"></param>
            <param name="treeControl">The owning tree model view.</param>
            <param name="node">The node to anchor to, or <c>Null</c> to anchor to the selected node.</param>
            <param name="column">The column to determine cell to anchor to, or null to anchor to whole node</param>
            <param name="isNodeNullable">Whether to allow <c>Null</c> in <paramref name="node"/>.</param>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeControlNodeAnchoringRect.DefaultAnchoringDispositions">
            <summary>
            Gets the default dispositions to be used when creating a layouter out of this anchor.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeControlNodeAnchoringRect.CreateFromSelectionDynamic(JetBrains.DataFlow.Lifetime,DevExpress.XtraTreeList.TreeList)">
            <summary>
            Creates the instance that tracks the selected node.
            When selection changes, the anchor is updated to track the new selection.
            </summary>
            <param name="lifetime"></param>
            <param name="treeControl">The owning tree model view.</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeControlNodeAnchoringRect.ClientToScreen(JetBrains.DataFlow.Lifetime,JetBrains.Application.Interop.NativeHook.IWindowsHookManager)">
            <summary>
            Converts the <see cref="T:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeControlNodeAnchoringRect"/>, which operates in client coordinates, into a screen-coordinates anchor suitable for layouting popups.
            Nests the current object within a window anchor attached to the tree control.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeControlNodeAnchoringRect.UpdateAnchor">
            <summary>
            Updates the anchoring rectangle as it gets dirty.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelBrowserPanelImpl.IsControlInitialized">
            <summary>
            Gets whether the control is initialized fully
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelPresentableView.Presenter">
            <summary>
            Gets or sets presenter for this view
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelPresentableView.ModelColumn">
            <summary>
            Gets column which contents is provided my model
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelPresentableView.Initialize">
            <summary>
            Initializes custom properties of the view
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelPresentableViewWPF.ReentrancyGuardExecuteOrQueueOrMerge(System.String,System.Action{System.Boolean})">
            <param name="action">action to execute , boolean flag is true for immidiate execution</param>
            <returns><c>True</c> if executed immediately, <c>False</c> if queued (<see cref="M:JetBrains.Threading.ReentrancyGuard.TryExecute(System.String,System.Action)"/>-compatible behavior).</returns>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelPresentableViewWPF.DefaultExpandLevels">
            <summary>
            Gets or sets default levels to expand on ExpandAll command (ex. if "*" key pressed)
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView">
            <summary>
            Provides default viewer for tree models
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.#ctor(JetBrains.Application.UI.Controls.TreeView.ITreeViewController,JetBrains.Application.UI.Components.IUIApplication,JetBrains.Application.UI.Tooltips.ITooltipManager,JetBrains.Application.Interop.NativeHook.IWindowsHookManager,JetBrains.Application.UI.Actions.ActionManager.IActionManager)">
            <summary>
            Initializes new instance of the TreeModelView
            </summary>
            <param name="controller">Controller which defines behavior for this view</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.#ctor(JetBrains.Application.UI.TreeModels.TreeModel,JetBrains.Application.UI.Controls.TreeView.ITreeViewController,JetBrains.Application.UI.Components.IUIApplication,JetBrains.Application.UI.Tooltips.ITooltipManager,JetBrains.Application.Interop.NativeHook.IWindowsHookManager,JetBrains.Application.UI.Actions.ActionManager.IActionManager)">
            <summary>
            Initializes new instance of the TreeModelView using specified model
            </summary>
            <param name="model">Model to display in this view</param>
            <param name="controller">Controller which defines behavior for this view</param>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.Model">
            <summary>
            Gets or sets model which is displayed in the view
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.MinimumRowHeight">
            <summary>
            Gets or sets minimum row height
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.RemoveOnCollapse">
            <summary>
            Gets or set value indicating whether nodes are removed on collapse or not
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.NavigateOnClick">
            <summary>
            Gets or sets value indicating whether Navigate command is issued on single click 
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.CustomPresenters">
            <summary>
            Gets map of custom presentation handlers
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.FocusedNode">
            <summary>
            Gets or sets currently focused node
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.ModelFocusedNode">
            <summary>
            Gets currently focused node in the model space
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.DefaultExpandLevels">
            <summary>
            Gets or sets default levels to expand on ExpandAll command (ex. if "*" key pressed)
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.ViewSelection">
            <summary>
            Gets currently selected nodes in the view space
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.ModelSelection">
            <summary>
            Gets currently selected nodes in the model space
            </summary>
        </member>
        <member name="E:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.Navigate">
            <summary>
            Raised when node navigation is occuring
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.ApplyDefaultApperiance">
            <summary>
            Applies colors from System theme
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.Initialize">
            <summary>
            Initializes custom properties of the view
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.IsModelNodeVisible(JetBrains.Application.UI.TreeModels.TreeModelNode)">
            <summary>
            Returns value indicating if specified viewNode/modelNode pair is visible
            </summary>
            <param name="modelNode"></param>
            <returns></returns>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.EnsureChildren(JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewNode)">
            <summary>
            Ensures that direct children for the node are created
            </summary>
            <param name="viewNode"></param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.EnsureDescendants(JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewNode)">
            <summary>
            Ensures that whole subtree for the node is created
            </summary>
            <param name="viewNode"></param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.InitializeNode(JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewNode,JetBrains.Application.UI.TreeModels.TreeModelNode)">
            <summary>
            Initializes visual representation of the model node
            </summary>
            <param name="viewNode">View node to initialize</param>
            <param name="modelNode">Model node associated with view node</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.UpdateNodePresentation(JetBrains.Application.UI.TreeModels.TreeModelNode)">
            <summary>
            Updates presentation of the view node associated with specified model node
            </summary>
            <param name="modelNode">Model node to update presentation for</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.UpdateNodePresentation(System.Object)">
            <summary>
            Updates presentation of the view nodes associated with specified data value
            </summary>
            <param name="dataValue"></param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.UpdateNodePresentation(JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewNode)">
            <summary>
            Updates presentation of the given view node
            </summary>
            <param name="viewNode"></param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.UpdateAllNodesPresentation">
            <summary>
            Updates presentation for all view nodes
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView.UpdateNodesPresentation(System.Collections.Generic.IEnumerable{JetBrains.Application.UI.TreeModels.TreeModelNode})">
            <summary>
            Updates presentation for specified model nodes
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewAnchoringRect">
            <summary>
            Anchors to the focused node or a manually specified node in the given tree model view.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewAnchoringRect.myViewNode">
            <summary>
            <c>Null</c> if tracking selection.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewAnchoringRect.myTreeModelView">
            <summary>
            <c>Null</c> only when disposed.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewAnchoringRect.#ctor(JetBrains.DataFlow.Lifetime,JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView,JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewNode,JetBrains.Application.Icons.IThemedIconManager)">
            <summary>
            Creates the instance.
            </summary>
            <param name="lifetime"></param>
            <param name="treeModelView">The owning tree model view.</param>
            <param name="node">The node to anchor to.</param>
            <param name="themedIconManager"> </param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewAnchoringRect.#ctor(JetBrains.DataFlow.Lifetime,JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView,JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewNode,JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewColumn,System.Boolean,JetBrains.Application.Icons.IThemedIconManager)">
            <summary>
            An internal ctor that allows for <c>Null</c> nodes for tracking the selection.
            </summary>
            <param name="lifetime"></param>
            <param name="treeModelView">The owning tree model view.</param>
            <param name="viewNode">The node to anchor to, or <c>Null</c> to anchor to the selected node.</param>
            <param name="viewColumn">The column to determine cell to anchor to, or null to anchor to whole node</param>
            <param name="isNodeNullable">Whether to allow <c>Null</c> in <paramref name="viewNode"/>.</param>
            <param name="themedIconManager"> </param>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewAnchoringRect.DefaultAnchoringDispositions">
            <summary>
            Gets the default dispositions to be used when creating a layouter out of this anchor.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewAnchoringRect.UpdateAnchor">
            <summary>
            Updates the anchoring rectangle as it gets dirty.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewAnchoringRect.CreateFromSelectionDynamic(JetBrains.DataFlow.Lifetime,JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelView,JetBrains.Application.Icons.IThemedIconManager)">
            <summary>
            Creates the instance that tracks the selected node.
            When selection changes, the anchor is updated to track the new selection.
            </summary>
            <param name="lifetime"></param>
            <param name="treeModelView">The owning tree model view.</param>
            <param name="themedIconManager"> </param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewAnchoringRect.ClientToScreen(JetBrains.DataFlow.Lifetime,JetBrains.Application.Interop.NativeHook.IWindowsHookManager)">
            <summary>
            Converts the <see cref="T:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewAnchoringRect"/>, which operates in client coordinates, into a screen-coordinates anchor suitable for layouting popups.
            Nests the current object within a window anchor attached to the tree control.
            </summary>
            <param name="lifetime"></param>
            <param name="hookman"></param>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewColorScheme">
            <summary>
            Represents set of colors which are used in the TreeModelView
            </summary>
        </member>
        <member name="E:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewColorScheme.Changed">
            <summary>
            Occurs when the color scheme is changed
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewColorScheme.RaiseChanged">
            <summary>
            Raises Changed event
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.DevExpressTreeView.TreeModelViewToolWindowColorScheme">
            <summary>
            Represents color scheme for TreeModelView specific for ToolWindow
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.FeatureSuggestion.FeatureSuggestionToolView">
            <summary>
            FeatureSuggestionToolView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.FeatureSuggestion.FeatureSuggestionToolView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.FeatureSuggestion.SuggestionNotificationControl">
            <summary>
            SuggestionNotificationControl
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.FeatureSuggestion.SuggestionNotificationControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Generate.GenerateWindowView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.Hyperlink.HyperlinkManager.StubbornAsyncCommitClient">
            <summary>
            Retries async commit on interruption until it completes.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.LiveTemplates.FileTemplates.ExtensionLocationView">
            <summary>
            ExtensionLocationView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.LiveTemplates.FileTemplates.ExtensionLocationView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.LiveTemplates.FileTemplates.RelativeLocationView">
            <summary>
            RelativeLocationView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.LiveTemplates.FileTemplates.RelativeLocationView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.LiveTemplates.Scope.FileMaskScopeConfig">
            <summary>
            FileMaskScopeConfig
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.LiveTemplates.Scope.FileMaskScopeConfig.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.LiveTemplates.Scope.ScopeSelectorControl">
            <summary>
            ScopeSelectorControl
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.LiveTemplates.Scope.ScopeSelectorControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.LiveTemplates.Scope.ScopeSelectorDialog">
            <summary>
            ScopeSelectorDialog
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.LiveTemplates.Scope.ScopeSelectorDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.ILocalHistoryItem.RevertOrder">
            <summary>
             Indicates the oder in which this change should be reverted relative to other changes
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.CombinedHistoryItemView">
            <summary>
            Interaction logic for CombinedHistoryItemView.xaml
            </summary>
            <summary>
            CombinedHistoryItemView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.CombinedHistoryItemView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.LocalHistoryDisabledView">
            <summary>
            Interaction logic for LocalHistoryDisabledView.xaml
            </summary>
            <summary>
            LocalHistoryDisabledView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.LocalHistoryDisabledView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.LocalHistoryEnabledView">
            <summary>
            Interaction logic for LocalHistoryEnabledView.xaml
            </summary>
            <summary>
            LocalHistoryEnabledView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.LocalHistoryEnabledView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.LocalHistoryFilterPanel">
            <summary>
            Interaction logic for LocalHistoryFilterPanel.xaml
            </summary>
            <summary>
            LocalHistoryFilterPanel
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.LocalHistoryFilterPanel.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.LocalHistoryItemView">
            <summary>
            Interaction logic for LocalHistoryItemView.xaml
            </summary>
            <summary>
            LocalHistoryItemView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.LocalHistoryItemView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.LocalHistoryListView">
            <summary>
            Interaction logic for LocalHistoryListView.xaml
            </summary>
            <summary>
            LocalHistoryListView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.LocalHistoryListView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.LocalHistoryPagedListView">
            <summary>
              Interaction logic for LocalHistoryPagedListView.xaml
            </summary>
            <summary>
            LocalHistoryPagedListView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.LocalHistoryPagedListView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.LocalHistoryView">
            <summary>
            Interaction logic for LocalHistoryView.xaml
            </summary>
            <summary>
            LocalHistoryView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.LocalHistoryView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.TextualHistoryItemView">
            <summary>
              Interaction logic for TextualHistoryItemView.xaml
            </summary>
            <summary>
            TextualHistoryItemView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.TextualHistoryItemView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.ToolboxResourceDictionary">
            <summary>
            ToolboxResourceDictionary
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.LocalHistory.UI.ToolboxResourceDictionary.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Naming.AdvancedNamingSettingsForm`1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Naming.AdvancedNamingSettingsForm`1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Naming.AdvancedNamingSettingsForm`1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.Naming.CustomNamingOptionsPageView">
            <summary>
            CustomNamingOptionsPageView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Naming.CustomNamingOptionsPageView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Naming.EditNamingPolicyControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Naming.EditNamingPolicyControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Naming.EditNamingPolicyControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.Naming.EditNamingPolicyDialog">
            <summary>
            Interaction logic for MainWindow.xaml
            </summary>
            <summary>
            EditNamingPolicyDialog
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.Naming.EditNamingPolicyDialog.SelectedSettingsLayer">
            <summary>
            Gets settings layer if user used Save To, null otherwise
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.Naming.EditNamingPolicyDialog.CanSaveTo">
            <summary>
            Gets whether to show save to button
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Naming.EditNamingPolicyDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Naming.EditUserRuleForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Naming.EditUserRuleForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Naming.EditUserRuleForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.Naming.JavaScript.TypeScriptNamingOptionsPageView">
            <summary>
            TypeScriptNamingOptionsPageView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Naming.JavaScript.TypeScriptNamingOptionsPageView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.Naming.PredefinedNamingSettingsPage">
            <summary>
            PredefinedNamingSettingsPage
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Naming.PredefinedNamingSettingsPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Navigation.SearchDialogs.DeclaredElementSelector.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Navigation.SearchDialogs.DeclaredElementSelector.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Navigation.SearchDialogs.DeclaredElementSelector.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.Navigation.SearchDialogs.FlagsSelector.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Navigation.SearchDialogs.FlagsSelector.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Navigation.SearchDialogs.FlagsSelector.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.CodeStylePageView">
            <summary>
            CodeStylePageView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.CodeStylePageView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.CodeStylePreviewView">
            <summary>
            CodeStylePreviewView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.CodeStylePreviewView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.Preview.CodePreviewView">
            <summary>
            CodePreviewView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.Preview.CodePreviewView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.Preview.DescriptionPreviewView">
            <summary>
            DescriptionPreviewView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.Preview.DescriptionPreviewView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.Preview.DiffPreviewView">
            <summary>
            DiffPreviewView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.Preview.DiffPreviewView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.Preview.NonePreviewView">
            <summary>
            NonePreviewView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.Preview.NonePreviewView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.ValueEditors.BoolValueEditorView">
            <summary>
            BoolValueEditorView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.ValueEditors.BoolValueEditorView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.ValueEditors.EnumValueEditorView">
            <summary>
            EnumValueEditorView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.ValueEditors.EnumValueEditorView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.ValueEditors.FlaggedEnumValueEditorView">
            <summary>
            FlaggedEnumValueEditorView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.ValueEditors.FlaggedEnumValueEditorView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.ValueEditors.NumericValueEditorView">
            <summary>
            NumericValueEditorView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.ValueEditors.NumericValueEditorView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.ValueEditors.OrderedItemCollectionEditorView">
            <summary>
            OrderedItemCollectionEditorView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.ValueEditors.OrderedItemCollectionEditorView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.ValueEditors.SimpleStringValueEditorView">
            <summary>
            SimpleStringValueEditorView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.CodeStyle.Views.ValueEditors.SimpleStringValueEditorView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.JavaScript.JsonCatalogSelector.JsonCatalogSelectorOptionsView">
            <summary>
            JsonCatalogSelectorOptionsView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.JavaScript.JsonCatalogSelector.JsonCatalogSelectorOptionsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.JavaScript.JsonCatalogSelector.JsonSchemaSelectionDialog">
            <summary>
            JsonSchemaSelectionDialog
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.JavaScript.JsonCatalogSelector.JsonSchemaSelectionDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.JavaScript.JsonFeatureSelector.JsonFeatureSelectorOptionsView">
            <summary>
            JsonFeatureSelectorOptionsView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.JavaScript.JsonFeatureSelector.JsonFeatureSelectorOptionsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.LanguageInjections.LanguageInjectionsOptionsView">
            <summary>
            LanguageInjectionsOptionsView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.OptionPages.LanguageInjections.LanguageInjectionsOptionsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.ParameterInfo.ParameterInfoControlBase.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            
            <returns>
            True if the window will not be activated when it is shown; otherwise, false. The default is false.
            </returns>
            
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.ParameterInfo.ParameterInfoControlBase.myWantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.ParameterInfo.ParameterInfoControlBase.WantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.Presentation.FindResultsPanelLegacy">
            <summary>
            Only for non-live tree view
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView">
            <summary>
            Implements the view that displays a QuickDoc extract from the XmlDoc help on the given declared element.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.myHeaderHeight">
            <summary>
            QuickDock window header height
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.OptionWidthOnScreenFactor">
            <summary>
            Fraction of the screen width that can be occupied, at most, by the window when auto-sizing to fit the content horizontally.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.myBorderSize">
            <summary>
            Border size, or padding of the Web browser control within the outer form bounds.
            </summary>    
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.myBrowserMinSize">
            <summary>
            Minimum size of the Web browser control, as it wouldn't behave well when size is too small.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.myMinLength">
            <summary>
            Minimum recommended length of the window against the corresponding dimensions. Restores after new content is loaded into the window; temporarily may be scaled down below this value.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.myQDControl">
            <summary>
            The Web browser control than renders the content.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.myWantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.myAutoSizeToFit">
            <summary>
            <see cref="P:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.AutoSizeToFit"/>.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.myDesiredSize">
            <summary>
            The size of the form that's recommended so that the browser content fit into the form.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.mySizeBarHitTestResults">
            <summary>
            A lazy-init collection of the hit test results that identify the size bars.
            Use <see cref="P:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.SizeBarHitTestResults"/>.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.QuickDocViewWidth">
            <summary>
            Gets or sets the QuickDocView custom width global setting.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.AutoSizeToFit">
            <summary>
            Gets or sets whether the control should accomodate its size to fit the content when navigating to another documentation.
            This mode is turned off for the current instance after the user resizes its manually.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.SizeBarHitTestResults">
            <summary>
            Gets the collection of the hit test results that identify the size bars.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.HitTest(System.Drawing.Point)">
            <summary>
            Hit-tests the window areas and returns the result. <see cref="F:JetBrains.Interop.WinApi.Constants.HitTestResult.HTTRANSPARENT"/> means the result is unspecified (eg, normal client area or outside the window).
            </summary>
            <param name="ptHitClient">The hit point, in client coordinates.</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.InitControls(JetBrains.DataFlow.Lifetime)">
            <summary>
            Inits the instance UI.
            </summary>
            <param name="lifetime"></param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.Closing"></see> event.
            </summary>
            
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"></see> that contains the event data. </param>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"></see> event.
            </summary>
            
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"></see> that contains the event data. </param>
        </member>
        <member name="P:JetBrains.PsiFeatures.UIInteractive.Core.QuickDoc.QuickDocView.WantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.SearchRequestNotifications.SearchRequestNotificationControl">
            <summary>
            Interaction logic for TextControl.xaml
            </summary>
            <summary>
            SearchRequestNotificationControl
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.SearchRequestNotifications.SearchRequestNotificationControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.SolutionTree.ProjectFilter.PassAdditionalFilter(JetBrains.ProjectModel.IProject)">
            <summary>
            Additional check for shared projects. It looks awful, but nobody knows how to filter shared project now.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.Tree.NewGroupingTree.CheckedRichTextLiveTreeNodeView">
            <summary>
            CheckedRichTextLiveTreeNodeView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Tree.NewGroupingTree.CheckedRichTextLiveTreeNodeView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.Tree.NewGroupingTree.CompositeRichTextLiveTreeNodeView">
            <summary>
            CompositeRichTextLiveTreeNodeView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Tree.NewGroupingTree.CompositeRichTextLiveTreeNodeView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.Tree.NewGroupingTree.DelegateActionBarItem">
            <summary>
            Interaction logic for DelegateActionBarItem.xaml
            </summary>
            <summary>
            DelegateActionBarItem
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Tree.NewGroupingTree.DelegateActionBarItem.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.Tree.NewGroupingTree.FlexibleGroupingManagerView">
            <summary>
            Interaction logic for FlexibleGroupingManagerView.xaml
            </summary>
            <summary>
            FlexibleGroupingManagerView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Tree.NewGroupingTree.FlexibleGroupingManagerView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.UIInteractive.Core.Tree.NewGroupingTree.RichTextLiveTreeNodeView">
            <summary>
            RichTextLiveTreeNodeView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.UIInteractive.Core.Tree.NewGroupingTree.RichTextLiveTreeNodeView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Tree.NewGroupingTree.Prototype.INodeViewModelStorage.TryGetViewModel(JetBrains.ReSharper.Feature.Services.Tree.NewGroupingTree.Prototype.NodeId)">
            <summary>
            Try get view model
            </summary>
            <param name="id">Item id</param>
            <returns>Return null if item doesn't exist in model, return NotCalculatedViewModel if should be calculated</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Tree.NewGroupingTree.Prototype.StoredModelChildrenChangedNotifier.Resume">
            <returns>Result - nodes to notify update children</returns>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
