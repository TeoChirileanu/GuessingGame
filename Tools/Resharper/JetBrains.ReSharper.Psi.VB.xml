<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.Psi.VB</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ReSharper.Psi.VB.CodeStyle.ICustomIndentHandler">
            <summary>
            Provide custom indentation for the node to format correctly in ASP/Razor
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.CodeStyle.ICustomIndentHandler.Indent(JetBrains.ReSharper.Psi.Tree.ITreeNode,JetBrains.ReSharper.Psi.CodeStyle.CustomIndentType,JetBrains.ReSharper.Psi.Impl.CodeStyle.FmtSettings{JetBrains.ReSharper.Psi.VB.CodeStyle.VBFormatSettingsKey})">
            <param name="node">node to get the indent for</param>
            <param name="indentType">requested indent type</param>
            <param name="settings"></param>
            <returns><c>null</c> if default indentation should be used, or string which will be used as an indent</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.ExpectedTypes.IMatchingPolicy.GetSubstantialIndices(System.Int32)">
            <summary>
            Returns indicies of arguments that will be considered during matching.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.VB.ExpectedTypes.IMatchingPolicy.IsPartial">
            <summary>
            Returns if match can return partial result. (if somethisng goes wrong)
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.VB.Impl.CompilerGeneratedFiles.ICompilerGeneratedFileProvider.File">
            <summary>
            File to be added
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.CompilerGeneratedFiles.ICompilerGeneratedFileProvider.OnProjectPropertiesChanged(JetBrains.ReSharper.Psi.Modules.PsiModuleChangeBuilder)">
            <summary>
            Callback on owner project properties change
            </summary>
            <param name="changeBuilder">Change builder to create change if necessary</param>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.CompilerGeneratedFiles.ICompilerGeneratedFileProvider.OnExternalModuleSetChanged(JetBrains.ReSharper.Psi.Modules.PsiModuleChangeBuilder,JetBrains.ReSharper.Psi.Modules.PsiModuleChange)">
            <summary>
            Callback on external module set changed
            </summary>
            <param name="changeBuilder">Change builder to create change if necessary</param>
            <param name="psiModuleChange">Change that triggered the callback</param>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.CompilerGeneratedFiles.My.MyGeneratedFileProvider.SourceFileShouldExist(JetBrains.Util.FileSystemPath)">
            <summary>
            http://msdn.microsoft.com/en-us/library/ms233781.aspx
            </summary>
            <param name="assemblyPath"></param>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.CompilerGeneratedFiles.My.MyGeneratedInternalXmlHelperProvider.SourceFileShouldExist(JetBrains.Util.FileSystemPath)">
            <summary>
            http://msdn.microsoft.com/en-us/library/ms233781.aspx
            </summary>
            <param name="assemblyPath"></param>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Impl.Tree.CollectionRangeVariableDeclarationBase.CastingSelectReferenceImpl">
            <summary>
            Select reference:
              from b as A in Cb ... 
            translated to:
              Cb.Select(b as B => (A)b)...
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Impl.Tree.CollectionRangeVariableDeclarationBase.DirectCastReferenceImpl">
            <summary>
            Select reference:
              from b in Cb ... 
            translated to:
              Cb.Cast(of Xxx)...
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Impl.Tree.QueryCollectionRangeVariableDeclaration.FromReferenceImpl">
            <summary>
            Simple SelectMany reference ...
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Impl.Tree.QueryCollectionRangeVariableDeclaration.CastingInnerSelectReferenceImpl">
            <summary>
            Select reference:
              from a in Ca, b as B as Ce ... 
            translated to:
              Ca.SelectMany(a as A => Ca.Select(e as E => (B)e), ...)...
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.Tree.ReferenceExpressionReference.TryCreatePartialTypeOrMemberResolveResult(JetBrains.ReSharper.Psi.ExtensionsAPI.Resolve.ResolveResultWithInfo,JetBrains.ReSharper.Psi.Resolve.Managed.IResolveContext,System.Func{JetBrains.ReSharper.Psi.ExtensionsAPI.Resolve.ResolveResultWithInfo})">
            <summary>
            11.6.1 Identical Type and Member Names
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.Tree.ReferenceExpressionReference.TryCreatePartialTypeOrInstanceObjectResolveResult(JetBrains.ReSharper.Psi.ExtensionsAPI.Resolve.ResolveResultWithInfo,JetBrains.ReSharper.Psi.Resolve.ISymbolTable,JetBrains.ReSharper.Psi.Resolve.Managed.IResolveContext)">
            <summary>
            VB specification 11.6.2
            Check if here could be implicit access to instance object.
            Hard-Coded behavior due to "My" file template
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.Tree.ChameleonBlock.ScanChameleon(JetBrains.ReSharper.Psi.Parsing.ILexer)">
            <summary>
            Attempt to scan chameleon range. Lexer should be positioned on the first token ofthe block.
            Returns <c>value</c> if chameleon could be created, and lexer is positioned on the end declaration token, and value means end offset of the last meaningful token
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.Tree.VBExpressionBase.NeedToParenthise(JetBrains.ReSharper.Psi.VB.Tree.IVBExpression)">
            <summary>
            Check if this expression should be enclosed in parentheses if it will be replaced by 'expr'
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.Tree.VBFile.SetOptions(JetBrains.ReSharper.Psi.VB.Tree.IOptionStatementsSection)">
            <summary>
            TODO: make it override SetOptionsSection!
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.CodeStyle.Formatter.VBCodeFormatter.RemoveExtraLineTerminatorsOnTreeNodeDeleting(JetBrains.ReSharper.Psi.Tree.ITreeNode,JetBrains.ReSharper.Psi.Tree.ITreeNode@,JetBrains.ReSharper.Psi.Tree.ITreeNode@,JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet)">
            <summary>
            Count the number of new lines to the left from deleted nodes and to the right from them, and remove the smallest
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Impl.Resolve.Filters.UseLocalVariableBeforeDeclarationFilter">
            <summary>
            Filter local variable declarations by their position in the tree
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Impl.Resolve.ExtensionMethods.VBBaseTypesIteratorUtil">
            <summary>
            iterates base types with option of interuption
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.Types.Conversions.NumericWideningExists(JetBrains.ReSharper.Psi.Modules.IPsiModule,JetBrains.ReSharper.Psi.IType,JetBrains.ReSharper.Psi.IType)">
            VB rules follow C# rules...
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Impl.Types.DeclaredTypeFromReferenceName">
            <summary>
            NOTE: Do not hold IReferenceName
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.VB.Impl.ControlFlow.VBVariableIndex.FunctionValue">
            <summary>
            Function return value
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.VB.Impl.ControlFlow.VBVariableIndex.Count">
            <summary>
            Get number of variables in index
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.ControlFlow.VBVariableIndex.AddVariable(JetBrains.ReSharper.Psi.VB.Impl.ControlFlow.VBVariableInfo)">
            <summary>
            Add new variable into index
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.ControlFlow.VBVariableIndex.FindLocalOrClosureVariable(JetBrains.ReSharper.Psi.IDeclaredElement)">
            <summary>
            Find info by declared element - only for top-level elements
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.ControlFlow.VBVariableIndex.Find(JetBrains.ReSharper.Psi.VB.Tree.IVBExpression)">
            <summary>
            Find info by expression
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.VB.Impl.ControlFlow.VBControlFlowContext.RecursiveAtAllPaths">
            <summary>
            Indicates that at all paths to this point there was recursive call
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.VB.Impl.Query.QueryVariablesCache.OwnersToChainsMap">
            <summary>
            Query method chains...
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.VB.Impl.Query.QueryVariablesCache.Variables">
            <summary>
            Query variables related to the particular platform.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.VB.Impl.Query.QueryVariablesCache.myChainTypes">
            <summary>
            Query variables related to the particular platform. May contain null values. 
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.VBProjectFileLanguageService.GetPreprocessorDefines(JetBrains.ProjectModel.IProject,JetBrains.Util.Dotnet.TargetFrameworkIds.TargetFrameworkId)">
            <summary>
            http://msdn.microsoft.com/en-us/library/ms233781.aspx
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Impl.VBReferenceProviderFactory.ComponentNameReference">
            <summary>
            Reference to component name in WinForm generated code
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.VBImportsUtil.FindAliasTo(JetBrains.ReSharper.Psi.VB.Tree.IVBFile,JetBrains.ReSharper.Psi.INamespace)">
            <summary>
            Try to find alias to given namespace.
            Returns found alias name, or <c>null</c> if none found
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.VBImportsUtil.FindAliasTo(JetBrains.ReSharper.Psi.VB.Tree.IVBFile,JetBrains.ReSharper.Psi.DeclaredElementInstance{JetBrains.ReSharper.Psi.ITypeElement})">
            <summary>
            Try to find alias to given type.
            Returns found alias name, or <c>null</c> if none found
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.VBImportsUtil.IsAliasValid(JetBrains.ReSharper.Psi.VB.Tree.IVBFile,System.String)">
            <summary>
            Check if the given alias directive is valid in file
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.VBImportsUtil.GetImportConflictsInternal(JetBrains.ReSharper.Psi.VB.Tree.IVBFile,JetBrains.ReSharper.Psi.VB.Tree.IImportDirective,JetBrains.Util.Key{JetBrains.ReSharper.Psi.DeclaredElementInstance},JetBrains.ReSharper.Psi.Resolve.IReference,JetBrains.ReSharper.Psi.Resolve.IResolveResult@)">
            <summary>
            Builds the list of conflicts which will occur if the given namespace will be imported into given scope.
            References with existing value in UserData by the given key will not be included
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.VBImportsUtil.GetImportOf(JetBrains.ReSharper.Psi.ExtensionsAPI.Resolve.IQualifiableReference)">
            <summary>
            Get the corresponding using directive (if any) which is used to import references' target
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Impl.VBReferenceUtil.ExtractQualifierReference(JetBrains.ReSharper.Psi.Resolve.IReference)">
            <summary>
            Try to extract the qualifier reference of the given reference' element
            i.e. extract reference to B from reference to C in expression A.B.C
            </summary>
            <param name="reference"></param>
            <returns>null if reference could not be extracted</returns>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.IVBPsiSourceFileProperties">
            <summary>
            PSI source file properties for VisualBasic
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.IVBPsiSourceFileProperties.ProjectStrictOff">
            <summary>
            Is option strict OFF for specific project file
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.IVBPsiSourceFileProperties.ProjectExplicitOff">
            <summary>
            Is option explicit OFF for specific project file
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.IVBPsiSourceFileProperties.ProjectInferOff">
            <summary>
            Is option infer OFF for specific project file
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.VB.IVBPsiSourceFileProperties.TreatWarningsAsErrors">
            <summary>
            Check how VB compiler deals with warnings
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.VB.IVBPsiSourceFileProperties.SuppressWarnings">
            <summary>
            VB compiler warning message IDs to be suppressed
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.VB.IVBPsiSourceFileProperties.WarningsAsErrors">
            <summary>
            VB compiler message IDs to be errors instead of warnings
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Parsing.VBMissingTokensInserter.PreProcessorParser">
            <summary>
            Try to parse the preprocessor directive from given lexer up to given limit.
            Returns parsed tree node, or <c>null</c> if none
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.ConditionalAccessExpressionExtensions.IsPartOfConditionalAccess(JetBrains.ReSharper.Psi.VB.Tree.IConditionalAccessExpression)">
            <summary>
            Checks if expression has conditional access sign somewhere in the qualifier expressions.
            
              foo.Bar?.Baz().Qux
              |   |    |__|__|___ true
              |___|______________ false
            
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.ConditionalAccessExpressionExtensions.IsTopPartOfConditionalAccess(JetBrains.ReSharper.Psi.VB.Tree.IConditionalAccessExpression)">
            <summary>
            Checks if expression is a top part of conditional access (with lifted type).
            
              foo?.Bar().Baz?[42].Qux
              |____|__|__|___|___ | __ false
                                  |___ true
            
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.IInterpolatedStringExpression.IsDefaultInterpolation">
            <summary>
            Return true iff interpolated string expression treated as string, 
              otherwise return false (for IFormattable and FormattableString)
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.IInterpolatedStringExpression.IsDefaultInterpolation(JetBrains.ReSharper.Psi.Resolve.Managed.IResolveContext)">
            <summary>
            Return true iff interpolated string expression treated as string, 
              otherwise return false (for IFormattable and FormattableString)
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.IInterpolatedStringExpression.GetInterpolationType">
            <summary>
            Return real interpolation type: String, IFormattable or FormattableString
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.IInterpolatedStringExpression.GetInterpolationType(JetBrains.ReSharper.Psi.Resolve.Managed.IResolveContext)">
            <summary>
            Return real interpolation type: String, IFormattable or FormattableString
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.IAggregatedCollectionOwner.GetQualifierWithTypeElement(JetBrains.ReSharper.Psi.Resolve.Managed.IResolveContext)">
            <summary>
            returns qualifier based on group variable...
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.VBExpressionExtensions.GetInitializedDeclaredElement(JetBrains.ReSharper.Psi.VB.Tree.IVBExpression)">
            <summary>
            Returns initialized element of expression that may provide projected name
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.VBExpressionExtensions.GetProjectedIdentifierName(JetBrains.ReSharper.Psi.VB.Tree.IVBExpression)">
            <summary>
            Returns projected name provided by expression
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.VBExpressionExtensions.ProvidesProjectedName(JetBrains.ReSharper.Psi.VB.Tree.IVBExpression)">
            <summary>
            returns true for expressions that provide projected name for a variable.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.VB.Tree.IConstructorDeclaration.Initializer">
            <summary>
            Search for 'MyBase.New', 'Me.New' or 'MyClass.New' constructor call
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.IVBStatement.ReplaceBy``1(``0)">
            <summary>
            Replace this statement in the tree by the copy of the given statement
            </summary>
            <param name="stmt"></param>
            <returns>The clone of the original statement which was added into the tree </returns>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.VB.Tree.ITypeArgumentList.TypeArguments">
            <summary>
            Get the list of type arguments. Corresponding item in list is <c>null</c> if none is written in the source code, for example:
            <c>GetType(C(Of ))</c>
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.IBlock.ReplaceBy(JetBrains.ReSharper.Psi.VB.Tree.IBlock)">
            <summary>
            Replace this block in the tree by the copy of the given statement
            </summary>
            <param name="block"></param>
            <returns>The clone of the original statement which was added into the tree </returns>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.IClassLikeDeclaration.InsertAtSpecificPosition``1(``0,JetBrains.ReSharper.Psi.Tree.ITreeNode)">
            <summary>
            Insert given class member at the first safe place AFTER given token
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.VB.Tree.IObjectCreationExpression.TypeReference">
            <summary>
            This reference is NOT presented in GetReferencedAssemblyNames() list for this element
            It is in GetReferencedAssemblyNames() of corresponding ReferenceName
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.IVBExpression.ReplaceBy(JetBrains.ReSharper.Psi.VB.Tree.IVBExpression)">
            <summary>
            Replace this expression by the copy of the given expression.
            Insert parentheses if necessary
            </summary>
            <param name="expr"></param>
            <returns>The copy of given expression which was actually inserted into tree</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.IVBFile.AddImportAfter(JetBrains.ReSharper.Psi.VB.Tree.IImportDirective,JetBrains.ReSharper.Psi.VB.Tree.IImportDirective)">
            <summary>
            This is low-level method when you need to insert directive in a specific place. It also doesn't account for comments and preprocessor directives.
            Consider using AddImport instead of it.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.IVBFile.AddImportBefore(JetBrains.ReSharper.Psi.VB.Tree.IImportDirective,JetBrains.ReSharper.Psi.VB.Tree.IImportDirective)">
            <summary>
            This is low-level method when you need to insert directive in a specific place. It also doesn't account for comments and preprocessor directives.
            Consider using AddImport instead of it.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Tree.IVBFile.SetOptions(JetBrains.ReSharper.Psi.VB.Tree.IOptionStatementsSection)">
            <summary>
            TODO: make it override SetOptionsSection!
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Util.VBCollectionTypeUtil.ElementTypeByCollectionType(JetBrains.ReSharper.Psi.IType,JetBrains.ReSharper.Psi.Resolve.IAccessContext,JetBrains.ReSharper.Psi.VB.Tree.IVBTreeNode)">
            <summary>
            Returns element type if collectionType is a _collection_type_ (described in specification, 15.8.4)
            otherwise, returns null
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Util.VBExpressionUtil.IsCondition(JetBrains.ReSharper.Psi.VB.Tree.IVBExpression)">
            <summary>
            Check if the expression could be used as boolean condition (VB specs 11.19)
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Util.VBExpressionUtil.GetRuntimeExpressionType(JetBrains.ReSharper.Psi.VB.Tree.IVBExpression)">
            <summary>
            Tries to guess expression type which will be at runtime. Usually returns expression.GetExpressionType, but recognize few special cases
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Util.StatementUtil.IsCheckOfCodeInvariant(JetBrains.ReSharper.Psi.VB.Tree.IVBStatement)">
            <summary>
            Check if this expression is precondition, i.e. something like
            <code>
            Logger.Assert(nonNullableEntity IsNot Nothing, "The condition (nonNullableEntity != null) is false.")
            -or-
            If nonNullableEntity Is Nothing Then Throw New Exception()
            -or-
            If nonNullableEntity Is Nothing Then
              Logger.LogError();
            EndIf
            </code>
            At the beginning of the method
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.IVBInvocationReference.InvocationName">
            <summary>
            Name of the invocation reference for using in features (can make some kind of resolve to get name)
            </summary>
            <returns></returns>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.VBTypeFactory.CreatePredefinedTypeByKeyword(JetBrains.ReSharper.Psi.Parsing.TokenNodeType,JetBrains.ReSharper.Psi.Modules.IPsiModule)">
            <remarks>tokenType should be type of token of one of predefined types.</remarks>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons">
             <summary>
            	<para>
            		<para>Autogenerated identifier classes and identifier objects to Themed Icons registered with <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see>.</para>
            		<para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected, use the identifier object in the <c>Id</c> field of the identifier class.</para>
            	</para>
            </summary>
            <remarks>
            	<para>This code was compile-time generated to support Themed Icons in the JetBrains application.</para>
            	<para>It has two primary goals: load the icons of this assembly to be registered with <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> so that they were WPF-accessible and theme-sensitive; and emit early-bound accessors for referencing icons in codebehind in a compile-time-validated manner.</para>
            	<h1>XAML</h1>
            	<para>For performance reasons, the icons are not individually exposed with application resources. There is a custom markup extension to bind an image source in markup.</para>
            	<para>To use an icon from XAML, set an <see cref="T:System.Windows.Media.ImageSource"></see> property to the <see cref="T:System.CodeDom.CodeTypeReference"></see> markup extension, which takes an icon identifier class (nested in <see cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons"></see> class) as a parameter.</para>
            	<para>Example:</para>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiVBThemedIcons+Trinity}" /&gt;</code>
            	<h1>Attributes</h1>
            	<para>Sometimes you have to reference an icon from a type attriute when you're defining objects in code. Typical examples are Options pages and Tool Windows.</para>
            	<para>To avoid the use of string IDs which are not validated very well, we've emitted identifier classes to be used with <c>typeof()</c> expression, one per each icon. Use the attribute overload which takes a <see cref="T:System.Type"></see> for an image, and choose your icon class from nested classes in the <see cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons"></see> class.</para>
            	<para>Example:</para>
            	<code>[Item(Name="Sample", Icon=typeof(PsiVBThemedIcons.Trinity))]</code>
            	<h1>CodeBehind</h1>
            	<para>In codebehind, we have two distinct tasks: (a) specify some icon in the APIs and (b) render icon images onscreen.</para>
            	<para>On the APIs stage you should only manipulate icon identifier objects (of type <see cref="T:JetBrains.UI.Icons.IconId"></see>, statically defined in <see cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons"></see> in <c>Id</c> fields). Icon identifier classes (nested in <see cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons"></see>) should be turned into icon identifier objects as early as possible. Rendering is about getting an <see cref="T:System.Windows.Media.ImageSource"></see> to assign to WPF, or <see cref="T:System.Drawing.Bitmap"></see> to use with GDI+ / Windows Forms.</para>
            	<para>You should turn an identifier object into a rendered image as late as possible. The identifier is static and lightweight and does not depend on the current theme, while the image is themed and has to be loaded or generated/rasterized. You need an <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> instance to get the image out of an icon identifier object. Once you got the image, you should take care to change it with theme changes — either by using a live image property, or by listening to the theme change event. See <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> and its extensions for the related facilities.</para>
            	<para>Example:</para>
            	<code>// Getting IconId identifier object to use with APIs
            IconId iconid = PsiVBThemedIcons.Trinity.Id;</code>
            	<code>// Getting IconId out of an Icon Identifier Class type
            IconId iconid = new JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsId(typeof(PsiVBThemedIcons.Trinity));</code>
            	<code>// Getting image for screen rendering by IconId
            themediconmanager.Icons[icnoid]</code>
            	<code>// Getting image for screen rendering by Icon Identifier Class
            themediconmanager.GetIcon&lt;PsiVBThemedIcons.Trinity&gt;()</code>
            	<h1>Icons Origin</h1>
            	<para>This code was generated by a pre-compile build task from a set of input files which are XAML files adhering to a certain convention, as convenient for exporting them from the Illustrator workspace, plus separate PNG files with raster icons. In the projects, these files are designated with <c>ThemedIconsXamlV3</c> and <c>ThemedIconPng</c> build actions and do not themselves get into the output assembly. All of such files are processed, vector images for different themes of the same icon are split and combined into the single list of icons in this assembly. This list is then written into the genearted XAML file (compiled into BAML within assembly), and serves as the source for this generated code.</para>
            </remarks>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbAnonymousMethod">
             <summary>
            	<para>
            		<para>VbAnonymousMethod Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbAnonymousMethod"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbAnonymousMethod.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
             `I7+=^_-`  `-_"=\Tu.            
             =y+^!Lt{1yyI{{c/~/y*            
             7E-              `Ex            
             5X` g@@@    g@@@  XX            
             {w^ !g@c    !g@c _wy            
             ~dz              rdwVr:         
              JOr  i1i++TFF  =OGt75HRI!'     
               tRT``7A@@Dl``+RP;====*lEDbi~  
                =ZRL"-  .,+AGs^"""""~!;_"88  
                  "J5b88WbkT_`,=~~=,`-~;"88  
                       88/!!=;;^.`~\*;=^"88  
                       WW/!!==~^"r+*!;=^"WW  
                       MM?!!==~^"r+*!;=^~MM  
                       +a8DVT;~^"r+*/To#%kr  
                          ,|wBqx*7eHNH7"`    
                             `;[D%u!.        
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiVBThemedIcons+VbAnonymousMethod}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiVBThemedIcons.VbAnonymousMethod))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiVBThemedIcons.VbAnonymousMethod.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiVBThemedIcons.VbAnonymousMethod&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbAnonymousMethod.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbAnonymousMethod">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbAnonymousMethod.Load_SymbolsVs11Color">
            <summary>Loads the image for Themed Icon VbAnonymousMethod theme aspect SymbolsVs11Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbAnonymousMethod.Load_SymbolsVs11Gray">
            <summary>Loads the image for Themed Icon VbAnonymousMethod theme aspect SymbolsVs11Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbAnonymousMethod.Load_SymbolsVs11GrayDark">
            <summary>Loads the image for Themed Icon VbAnonymousMethod theme aspect SymbolsVs11GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbAnonymousMethod.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon VbAnonymousMethod.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.Vbasic">
             <summary>
            	<para>
            		<para>Vbasic Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.Vbasic"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.Vbasic.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                 33333333333333I/`           
                 uu''''''''''''^su/`         
                 oo--------------~Jo*`       
                 55----        ----~l2+`     
                 aa----        ------~ta+    
                 SS----            ----SS    
                 kk----            ----kk    
                 kk----            ----kk    
             $$$$$$$$$$$$$$$$8wo/` ----PP    
             EB``BBBB``BB````_,+DD.----UU    
             :8!.u88V.~88..888V.}8=----66    
              eO__OR,-bDD------_4D(----99    
              _R1-!r-JRRR--RRRAc:R#----ww    
               uO=__"OOOO______~lO#bbbbbb    
               ^bbbbbbbbbbbbbbbE7^           
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiVBThemedIcons+Vbasic}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiVBThemedIcons.Vbasic))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiVBThemedIcons.Vbasic.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiVBThemedIcons.Vbasic&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.Vbasic.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.Vbasic">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.Vbasic.Load_Color">
            <summary>Loads the image for Themed Icon Vbasic theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.Vbasic.Load_Gray">
            <summary>Loads the image for Themed Icon Vbasic theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.Vbasic.Load_GrayDark">
            <summary>Loads the image for Themed Icon Vbasic theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.Vbasic.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon Vbasic.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateFunction">
             <summary>
            	<para>
            		<para>VbDelegateFunction Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateFunction"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateFunction.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                    /dddddddd
                    ``-_^=\L)Tc?/="_|db4Ic,  
                  `_,~,-'```.--:~!!!tdC\iy?,,
                `_:"-`   ````.'--_'`*d}!~"+ll
              ``_=-`  "T7iJtt{TL=_` `.^+!=lbb
              ."_-`   ^ilt^ _/To1}!-"!~"!7{uu
              _/,`` ``~t}F~ .:rykK/`.'_"TdT""
              ,)^`````={CI~ -^cKX6*`.-?dEu=  
              "T~..`..!13o=`_=74wb+`.-~+LT"  
              _+~_-'--/o2a;`,/}bdHr`_=;!+T"  
              -~~=,-__+aVE/`=[VH4Pr-~r)ir;-  
              `.~L!^",?kKX4bbHXSl+!=+cTJ;'`  
                '"/|+!;;!/+rrrrrrrL)7}+^'    
                  '^*7TT(cLrrrLcTiJJ+^'      
                    `',;r7{ooo{7r;,'`        
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiVBThemedIcons+VbDelegateFunction}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiVBThemedIcons.VbDelegateFunction))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiVBThemedIcons.VbDelegateFunction.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiVBThemedIcons.VbDelegateFunction&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateFunction.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateFunction">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateFunction.Load_SymbolsIdea">
            <summary>Loads the image for Themed Icon VbDelegateFunction theme aspect SymbolsIdea.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateFunction.Load_SymbolsVs08">
            <summary>Loads the image for Themed Icon VbDelegateFunction theme aspect SymbolsVs08.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateFunction.Load_SymbolsVs11Color">
            <summary>Loads the image for Themed Icon VbDelegateFunction theme aspect SymbolsVs11Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateFunction.Load_SymbolsVs11Gray">
            <summary>Loads the image for Themed Icon VbDelegateFunction theme aspect SymbolsVs11Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateFunction.Load_SymbolsVs11GrayDark">
            <summary>Loads the image for Themed Icon VbDelegateFunction theme aspect SymbolsVs11GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateFunction.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon VbDelegateFunction.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateSub">
             <summary>
            	<para>
            		<para>VbDelegateSub Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateSub"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateSub.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                \HHH6k/``    
                    ``-_^;*L)T+=~^_'_"7H\    
                  `_"~,-'....-_,-._~;+1H\    
                `_,"-`` ````..--` /HHHdddHHHH
              `._=_`  "77Jlt}F7L,   `.=t;'`  
              ."_-`   ^Jlt^ _\Tj|!!!tHHHHH{!!
              _/,`````~t{C~ .,rStr_ ``^c+!-  
              ,)^`````=FxI=`-^)PX4/`,+CHyt^  
              "T~....'!Iuo=`_=i9wb*``...,!-  
              _+~_----/o5y!`,/{dpHr.~rLc|7"  
              -~~="-__raVK/`;xkH9Zr-=r(Jr;-  
              `.~L!^",LkZ69bbH6Vlr/=+)Tl;-`  
                '"/|r!!;!\+rrrrrrrL)s{r^'    
                  '^*77T|cL???LcTiJl+^'      
                    `-,;r7{ooo{7r;,-`        
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiVBThemedIcons+VbDelegateSub}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiVBThemedIcons.VbDelegateSub))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiVBThemedIcons.VbDelegateSub.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiVBThemedIcons.VbDelegateSub&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateSub.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateSub">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateSub.Load_SymbolsIdea">
            <summary>Loads the image for Themed Icon VbDelegateSub theme aspect SymbolsIdea.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateSub.Load_SymbolsVs08">
            <summary>Loads the image for Themed Icon VbDelegateSub theme aspect SymbolsVs08.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateSub.Load_SymbolsVs11Color">
            <summary>Loads the image for Themed Icon VbDelegateSub theme aspect SymbolsVs11Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateSub.Load_SymbolsVs11Gray">
            <summary>Loads the image for Themed Icon VbDelegateSub theme aspect SymbolsVs11Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateSub.Load_SymbolsVs11GrayDark">
            <summary>Loads the image for Themed Icon VbDelegateSub theme aspect SymbolsVs11GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbDelegateSub.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon VbDelegateSub.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionFunction">
             <summary>
            	<para>
            		<para>VbExtensionFunction Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionFunction"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionFunction.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                    /bbbbbbbb
                        `-;iii;-`   /bw61L,  
                      `-;i+~~=|S+-` /b{/7ar,,
                    `-;i+~-```_;TS+-Lb/ ."*ll
                  `-;i+~-`.___--"!TS+-` `-?ww
                `-;i1a2uaE}?FX66XPl/To\-_,+II
              `-;i+~+TxE!`/X66+'rbku=`._LbT,,
              "i+~-`=CeZ/`+69wr-?d6k= !b{\_  
              "i+=_`=1aX+.+wwb?-=)?+_ -;^_.  
              `-+ST;rJo6+'rbbdc_;TIUUUUU+.`  
                `-+SEZEk+-?dHG)_=?CUl/lU!    
                  `-+Sr_-`'_'````.*Ul/lU!    
                    `-+SJ+="_'rp9UV2T/|IaUUUU
                      `-+Slrrr|iapP2i+cTIUr''
                        `-+SSS+--'Lpuc]Ur'`  
                                  `'LpL'`    
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiVBThemedIcons+VbExtensionFunction}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiVBThemedIcons.VbExtensionFunction))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiVBThemedIcons.VbExtensionFunction.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiVBThemedIcons.VbExtensionFunction&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionFunction.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionFunction">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionFunction.Load_SymbolsIdea">
            <summary>Loads the image for Themed Icon VbExtensionFunction theme aspect SymbolsIdea.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionFunction.Load_SymbolsVs08">
            <summary>Loads the image for Themed Icon VbExtensionFunction theme aspect SymbolsVs08.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionFunction.Load_SymbolsVs11Color">
            <summary>Loads the image for Themed Icon VbExtensionFunction theme aspect SymbolsVs11Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionFunction.Load_SymbolsVs11Gray">
            <summary>Loads the image for Themed Icon VbExtensionFunction theme aspect SymbolsVs11Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionFunction.Load_SymbolsVs11GrayDark">
            <summary>Loads the image for Themed Icon VbExtensionFunction theme aspect SymbolsVs11GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionFunction.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon VbExtensionFunction.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionSub">
             <summary>
            	<para>
            		<para>VbExtensionSub Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionSub"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionSub.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                \HHH6E\``    
                        `-!lll=.`   ."7H\    
                      `-!lr=;!Tk+.` .,TH\    
                    `-!lr=:..'"/=^THHHdbdHHHH
                  `-!lr;,.-,,",_-._^_.^+_    
                `-!luky2VU1)I9wwILr+xHHHHHF!!
              `-!lr;rsuU+'+9wwL-=|=-` ,L~.`  
              ^lr;:.;3S6r-rwbbc_)AuL*;lH1r_  
              ^l?!,.!uV9r-?bpH)_!T*~-   ``   
              `-rk7/c}awL-cHGAT,/zo66666r'`  
                `-rkZ6XPr_)AO#7"!)I6frf6!    
                  `-rkL"_'-,-'.`.-r6frf6!    
                    `-rktr!~,-)Ab6Eylr7ok6666
                      `-rk}LLc7tVAXytLTlo6r''
                        `-rkkkr--'cA2Tu6r'`  
                                  `'cAc'`    
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiVBThemedIcons+VbExtensionSub}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiVBThemedIcons.VbExtensionSub))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiVBThemedIcons.VbExtensionSub.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiVBThemedIcons.VbExtensionSub&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionSub.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionSub">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionSub.Load_SymbolsIdea">
            <summary>Loads the image for Themed Icon VbExtensionSub theme aspect SymbolsIdea.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionSub.Load_SymbolsVs08">
            <summary>Loads the image for Themed Icon VbExtensionSub theme aspect SymbolsVs08.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionSub.Load_SymbolsVs11Color">
            <summary>Loads the image for Themed Icon VbExtensionSub theme aspect SymbolsVs11Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionSub.Load_SymbolsVs11Gray">
            <summary>Loads the image for Themed Icon VbExtensionSub theme aspect SymbolsVs11Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionSub.Load_SymbolsVs11GrayDark">
            <summary>Loads the image for Themed Icon VbExtensionSub theme aspect SymbolsVs11GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbExtensionSub.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon VbExtensionSub.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbFunction">
             <summary>
            	<para>
            		<para>VbFunction Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbFunction"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbFunction.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                    /wwwwwwww
                        `-;777;-`   /w4XxL,  
                      `-;7*~~~)S+-` /w{/75r,,
                    `-;7*~-```_=|S+-Lw/ .,\JJ
                  `-;7+~-`.-__--"!TS+-` `-?99
                `-;7xaoI5ktr{UX6hEJ/|o/-_,+11
              `-;7+~\|Ck!`!UX6+.+wVI~ '"|wT,,
              "7+~-`~FoE/`/669r'rbXk= !wxr,  
              "7+~-`=x5U\`+9wwr-LH6E; _!~_.  
              `-+S|=rzo6+.+wbbL-cAX5r,rS+-`  
                `-+SkEkV*-rbdHc_LwwwZS+-`    
                  `-+S+_.`.-__-'-,rS+-`      
                    `-+Ss*=,"^;rlS+-`        
                      `-+SJ++rlS+-`          
                        `-+SSS+-`            
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiVBThemedIcons+VbFunction}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiVBThemedIcons.VbFunction))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiVBThemedIcons.VbFunction.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiVBThemedIcons.VbFunction&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbFunction.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbFunction">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbFunction.Load_SymbolsIdea">
            <summary>Loads the image for Themed Icon VbFunction theme aspect SymbolsIdea.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbFunction.Load_SymbolsVs08">
            <summary>Loads the image for Themed Icon VbFunction theme aspect SymbolsVs08.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbFunction.Load_SymbolsVs11Color">
            <summary>Loads the image for Themed Icon VbFunction theme aspect SymbolsVs11Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbFunction.Load_SymbolsVs11Gray">
            <summary>Loads the image for Themed Icon VbFunction theme aspect SymbolsVs11Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbFunction.Load_SymbolsVs11GrayDark">
            <summary>Loads the image for Themed Icon VbFunction theme aspect SymbolsVs11GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbFunction.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon VbFunction.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbModule">
             <summary>
            	<para>
            		<para>VbModule Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbModule"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbModule.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                    `._~!r)iii)r!~_.`        
                  .,~;,'``````.-,~!r=,.      
                .,,"-      ```..--,~/c;,.    
              `.,;- "7|c,  ``.'-!xoy*-~c~.`  
              -~_.` "iT);:-`.-^\Tuak*'~r!~-  
              _r,`  ^l7|)c^`-_+1ueVh+'"/+r_  
              "i^   ~tiTL+~_"~+JIVEX+-,=ri"  
              "i~```={li+^!cT7?/JEh6r-"=ri"  
              _r^..`=xFt;'/55ar_rKhX+-"!\r_  
              -~^"_.!uI]!.=li7/"cEU6r-~r!~-  
              `.^+=,r5oI!-~rr+!=TEU4?-=c~.`  
                .,=r/==~==;!!!!!!!/+cT!,.    
                  .,;LL?+/!;;;!/+?Lc!,.      
                    `._~!r)iii)r!~_.`        
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiVBThemedIcons+VbModule}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiVBThemedIcons.VbModule))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiVBThemedIcons.VbModule.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiVBThemedIcons.VbModule&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbModule.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbModule">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbModule.Load_SymbolsIdea">
            <summary>Loads the image for Themed Icon VbModule theme aspect SymbolsIdea.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbModule.Load_SymbolsVs08">
            <summary>Loads the image for Themed Icon VbModule theme aspect SymbolsVs08.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbModule.Load_SymbolsVs11Color">
            <summary>Loads the image for Themed Icon VbModule theme aspect SymbolsVs11Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbModule.Load_SymbolsVs11Gray">
            <summary>Loads the image for Themed Icon VbModule theme aspect SymbolsVs11Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbModule.Load_SymbolsVs11GrayDark">
            <summary>Loads the image for Themed Icon VbModule theme aspect SymbolsVs11GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbModule.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon VbModule.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbPropertyWithParams">
             <summary>
            	<para>
            		<para>VbPropertyWithParams Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbPropertyWithParams"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbPropertyWithParams.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                    ;E; ;E;  
                        ._!iJl/_. ,?*;- _\+??
                      ._/lr!!!cC!-+E;     ;EE
                    ._/lL!"'--^*,`r8r     r88
                  ._/l?!"'_^~~":. /D(-`   +DD
                ._/l?!TakX6649Vu~ =V/.-_` ;EE
              ._!Jr!"'+X66r-~+Fbc_=c/~~==!+??
              "ir!"'_^T649?-";ldS{=.\E+-?w/  
              ^tc/"-:~T9wwL_=r1H6E*..`'-"=-  
              ._+uT+~-?wbbbdpH6ks/=~/|IUc_.  
                ._r5JrtE6d)_~*++!=+|1Uc_.    
                  ._rS4RbZL:=+!=+|1Uc_.      
                    ._?k{c!^~~*|IUc_.        
                      ._Lhx)|TIUc_.          
                        ._cUUUc_.            
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiVBThemedIcons+VbPropertyWithParams}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiVBThemedIcons.VbPropertyWithParams))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiVBThemedIcons.VbPropertyWithParams.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiVBThemedIcons.VbPropertyWithParams&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbPropertyWithParams.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbPropertyWithParams">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbPropertyWithParams.Load_SymbolsIdea">
            <summary>Loads the image for Themed Icon VbPropertyWithParams theme aspect SymbolsIdea.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbPropertyWithParams.Load_SymbolsVs08">
            <summary>Loads the image for Themed Icon VbPropertyWithParams theme aspect SymbolsVs08.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbPropertyWithParams.Load_SymbolsVs11Color">
            <summary>Loads the image for Themed Icon VbPropertyWithParams theme aspect SymbolsVs11Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbPropertyWithParams.Load_SymbolsVs11Gray">
            <summary>Loads the image for Themed Icon VbPropertyWithParams theme aspect SymbolsVs11Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbPropertyWithParams.Load_SymbolsVs11GrayDark">
            <summary>Loads the image for Themed Icon VbPropertyWithParams theme aspect SymbolsVs11GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbPropertyWithParams.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon VbPropertyWithParams.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbSub">
             <summary>
            	<para>
            		<para>VbSub Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbSub"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbSub.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                /bbbUV/``    
                        `-;sss=.`   .,Tb/    
                      `-;s+~~=)S*.` .,Tb/    
                    `-;s+~-```_==~7bbbwwwbbbb
                  `-;s+~-`.___--.._~_."+_    
                `-;s1ajn5k}rFXX6xLr+Fbbbbbt!!
              `-;s+~*|]k!`/XX6+'~T=-` ^J=.`  
              "s+~-`~C2P/`*64wr-rdIL\=JboT"  
              "s+=_`=1aX*.+wwb?-LGuc, `-:~-  
              `-+ST;rio6+'rbbdc_cOXar"?S+-`  
                `-+SkPEV+-rdHG)_cwbwhS+-`    
                  `-+Sr_'`'___--_"?S+-`      
                    `-+Si+=""^!rlS+-`        
                      `-+Sl+rrlS+-`          
                        `-+SSS+-`            
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiVBThemedIcons+VbSub}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiVBThemedIcons.VbSub))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiVBThemedIcons.VbSub.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiVBThemedIcons.VbSub&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbSub.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbSub">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbSub.Load_SymbolsIdea">
            <summary>Loads the image for Themed Icon VbSub theme aspect SymbolsIdea.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbSub.Load_SymbolsVs08">
            <summary>Loads the image for Themed Icon VbSub theme aspect SymbolsVs08.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbSub.Load_SymbolsVs11Color">
            <summary>Loads the image for Themed Icon VbSub theme aspect SymbolsVs11Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbSub.Load_SymbolsVs11Gray">
            <summary>Loads the image for Themed Icon VbSub theme aspect SymbolsVs11Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbSub.Load_SymbolsVs11GrayDark">
            <summary>Loads the image for Themed Icon VbSub theme aspect SymbolsVs11GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.VB.Resources.PsiVBThemedIcons.VbSub.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon VbSub.</summary>
        </member>
    </members>
</doc>
