<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.Platform.ProjectModel.NuGet</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ProjectModel.NuGet.Credentials.NuGetV2CredentialServiceAdapter">
            <summary>
            Wraps a CredentialService to match the older v2 NuGet.ICredentialProvider interface
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.NuGet.Credentials.NuGetV2CredentialServiceAdapter.SetEndpoints(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{NuGet.Configuration.PackageSource,System.String}})">
            <summary>
            Initializes endpoint-to-source uri mapping
            </summary>
            <param name="endpoints">List of endpoint mapping entries</param>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.Logging.NuGetLogContext.NuGet">
            <summary>
            1. Mapped values from <see cref="T:NuGet.ProjectManagement.MessageLevel"/> (NuGet.ProjectManagement.MessageLevel)
            2. Messages from <see cref="T:NuGet.Common.ILogger"/> (NuGet.Common.ILogger).
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.Logging.NuGetLogContext.Ide">
            <summary>
            Our custom messages
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.Logging.NuGetLogContext.Build">
            <summary>
            MSBuild
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.Logging.NuGetLogLevel.Debug">
            <summary>
            1. Mapped value for <see cref="F:NuGet.ProjectManagement.MessageLevel.Debug"/> (NuGet.ProjectManagement.MessageLevel.Debug).
            2. Messages from <see cref="M:NuGet.Common.ILogger.LogDebug(System.String)"/> (NuGet.Common.ILogger.LogDebug).
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.Logging.NuGetLogLevel.Verbose">
            <summary>
            1. Messages from <see cref="M:NuGet.Common.ILogger.LogVerbose(System.String)"/> (NuGet.Common.ILogger.LogDebug).
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.Logging.NuGetLogLevel.Information">
            <summary>
            1. Mapped value for <see cref="F:NuGet.ProjectManagement.MessageLevel.Info"/> (NuGet.ProjectManagement.MessageLevel.Info).
            2. Messages from <see cref="M:NuGet.Common.ILogger.LogInformation(System.String)"/> (NuGet.Common.ILogger.LogInformation).
            3. Mapped value of <see cref="F:JetBrains.ProjectModel.NuGet.Logging.NuGetNotificationLevel.Info"/>.
            4. Messages from <see cref="M:NuGet.Common.ILogger.LogInformationSummary(System.String)"/> (NuGet.Common.ILogger.LogInformationSummary).
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.Logging.NuGetLogLevel.Minimal">
            <summary>
            1. Messages from <see cref="M:NuGet.Common.ILogger.LogMinimal(System.String)"/> (NuGet.Common.ILogger.LogMinimal).
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.Logging.NuGetLogLevel.Warning">
            <summary>
            1. Mapped value for <see cref="F:NuGet.ProjectManagement.MessageLevel.Warning"/> (NuGet.ProjectManagement.MessageLevel.Warning).
            2. Messages from <see cref="M:NuGet.Common.ILogger.LogWarning(System.String)"/> (NuGet.Common.ILogger.LogWarning).
            3. Mapped value of <see cref="F:JetBrains.ProjectModel.NuGet.Logging.NuGetNotificationLevel.Warning"/>.
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.Logging.NuGetLogLevel.Error">
            <summary>
            1. Mapped value for <see cref="F:NuGet.ProjectManagement.MessageLevel.Error"/> (NuGet.ProjectManagement.MessageLevel.Error).
            2. Messages from <see cref="M:NuGet.ProjectManagement.INuGetProjectContext.ResolveFileConflict(System.String)"/> (NuGet.ProjectManagement.INuGetProjectContext.ResolveFileConflict).
            3. Messages from <see cref="M:NuGet.ProjectManagement.INuGetProjectContext.ReportError(System.String)"/> (NuGet.ProjectManagement.INuGetProjectContext.ReportError)
            4. Messages from <see cref="M:NuGet.Common.ILogger.LogError(System.String)"/> (NuGet.Common.ILogger.LogError).
            5. Mapped value of <see cref="F:JetBrains.ProjectModel.NuGet.Logging.NuGetNotificationLevel.Error"/>.
            6. Mapped value of <see cref="F:JetBrains.ProjectModel.NuGet.Logging.NuGetNotificationLevel.Exception"/>.
            7. Exception which were thrown by NuGet API.
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.Logging.NuGetNotificationMode.Always">
            <summary>
            Notifications will always be shown.
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.Logging.NuGetNotificationMode.ErrorOnly">
            <summary>
            Only Warning, Error, and Exception notification will be shown.
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.Logging.NuGetNotificationMode.Silent">
            <summary>
            Notification will not be shown.
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.NuGet.Operations.NuGetPatchedInstallationCompatibility">
            <summary>
            This is a patched version of the original NuGet.PackageManagement.InstallationCompatibility class
              (NuGet.PackageManagement.dll, branch: release-4.3.0-rtm)
            
            Original version contains broken checks which doesn't allow to install "Microsoft.EntityFrameworkCore.Tools.DotNet"
            All patched lines (except C#7 compatibilities issues) are marked with "PATCHED" comment.
            
            Please, don't make any changes in this class or do it very carefully.
            
            See also:
             * https://youtrack.jetbrains.com/issue/RIDER-5421
             * https://github.com/NuGet/Home/issues/4190
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.NuGet.Operations.NuGetPatchedInstallationCompatibility.EnsurePackageCompatibilityAsync(NuGet.ProjectManagement.NuGetProject,NuGet.Packaging.Core.PackageIdentity,NuGet.Protocol.Core.Types.DownloadResourceResult,System.Threading.CancellationToken)">
            <summary>
            Asynchronously validates the compatibility of a single downloaded package.
            </summary>
            <param name="nuGetProject">The NuGet project. The type of the NuGet project determines the sorts or
            validations that are done.</param>
            <param name="packageIdentity">The identity of that package contained in the download result.</param>
            <param name="resourceResult">The downloaded package.</param>
            <param name="cancellationToken">A cancellation token.</param>.
            <returns>A task that represents the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="nuGetProject" />
            is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="packageIdentity" />
            is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="resourceResult" />
            is <c>null</c>.</exception>
            <exception cref="T:System.OperationCanceledException">Thrown if <paramref name="cancellationToken" />
            is cancelled.</exception>
        </member>
        <member name="P:JetBrains.ProjectModel.NuGet.Operations.NuGetLegacyRunningState.IsNugetRunning">
            <summary>
            True when NuGet is definitely operationg (between installing/ installed and uninstalling/ uninstalled)
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.NuGet.PackageManagement.NuGetProjectType">
            <summary>
            The different types of NuGet projects.
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.PackageManagement.NuGetProjectType.Unsupported">
            <summary>
            Used if the project does not support NuGet.
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.PackageManagement.NuGetProjectType.Unknown">
            <summary>
            Used if the <see cref="T:NuGet.ProjectManagement.NuGetProject"/> is not a recognized type.
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.PackageManagement.NuGetProjectType.PackagesConfig">
            <summary>
            Corresponds to <see cref="T:NuGet.ProjectManagement.MSBuildNuGetProject"/>.
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.PackageManagement.NuGetProjectType.UwpProjectJson">
            <summary>
            Corresponds to <see cref="T:NuGet.ProjectManagement.Projects.BuildIntegratedNuGetProject"/>.
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.PackageManagement.NuGetProjectType.XProjProjectJson">
            <summary>
            Corresponds to <see cref="T:NuGet.ProjectManagement.Projects.ProjectKNuGetProjectBase"/>.
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.PackageManagement.NuGetProjectType.CpsBasedPackageRefs">
            <summary>
            Corresponds to MSBuildShellOutNuGetProject.
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.PackageManagement.NuGetProjectType.LegacyProjectSystemWithPackageRefs">
            <summary>
            It will be used for legacy project system with package references.
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.NuGet.PackageManagement.NuGetSolutionManager.GetNuGetProjectSafeName(NuGet.ProjectManagement.NuGetProject)">
            <summary>
            Return short name if it's non-ambiguous.
            Return CustomUniqueName for projects that have ambigous names (such as same project name under different solution folder)
            Example: return Folder1/ProjectA if there are both ProjectA under Folder1 and Folder2
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.NuGet.Packaging.NuGetContentFileHelper.FilterContentFiles(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Xplat version of NuGet.PackageExtensions.GetContentFiles(this IPackage package)
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.Packaging.NuGetContentFileHelper.ourPpExtension">
            <summary>
            https://docs.nuget.org/create/configuration-file-and-source-code-transformations#user-content-specifying-source-code-transformations
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.NuGet.Packaging.NuGetContentFileHelper.ParseFrameworkNameFromFilePathXplat(System.String,System.String@)">
            <summary>
            Xplat version of FrameworkNameUtility.ParseFrameworkNameFromFilePath(path, out effectivePath)
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.NuGet.Packaging.NuGetContentFileStorage">
            <summary>
            This component contains cache with lists of content files from NuGet for each project.
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.NuGet.Packaging.NuGetLegacyRepositorySettings">
            <summary>
            Analog of <c>NuGet.VisualStudio.RepositorySettings</c>
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.NuGet.Packaging.NuGetLegacyRepositorySettings.GetConfigurationPath(JetBrains.Util.FileSystemPath)">
            <summary>
            Returns the configuraton path by walking the directory structure to find a nuget.config file.
            </summary>
            <param name="solutionFilePath"></param>
        </member>
        <member name="M:JetBrains.ProjectModel.NuGet.Packaging.NuGetLegacyRepositorySettings.GetRepositoryPathFromConfig(JetBrains.Util.FileSystemPath)">
            <summary>
            Extracts the repository path from a nuget.config settings file
            </summary>
            <param name="path">Full path to the nuget.config file</param>
        </member>
        <member name="M:JetBrains.ProjectModel.NuGet.Packaging.NuGetLegacyRepositorySettings.GetConfigurationFiles(JetBrains.Util.FileSystemPath)">
            <summary>
            Returns the list of candidates for nuget config files.
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.NuGet.Packaging.NuGetNupkgStorage">
            <summary>
            This component contains a cache with metadata for loaded packages.
            Right now we keep a list of all files for each package (classic packages only).
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.NuGet.Packaging.NuGetPackageDependencyLight">
            <summary>
            Light version of NuGet.Packaging.Core.PackageDependency
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.NuGet.Packaging.NuGetPackageDependencyGroupLight">
            <summary>
            Light version of NuGet.Packaging.PackageDependencyGroup
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.NuGet.Packaging.NuGetRepositoryManager.RepositoryPathLive">
            <summary>
            Path to the classic packages folder (Live)
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.NuGet.Packaging.NuGetRepositoryManager.RepositoryPath">
            <summary>
            Path to the classic packages folder
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.NuGet.Packaging.NuGetRepositoryManager.GlobalPackagesFolderLive">
            <summary>
            Path to global packages folder (Live)
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.NuGet.Packaging.NuGetRepositoryManager.GlobalPackagesFolder">
            <summary>
            Path to global packages folder (Live)
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.NuGet.Packaging.NuGetRepositoryManager.OnContentChanges">
            <summary>
            Prolongated grouping event about any changes inside current packages folder.
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.NuGet.ProjectManagement.NuGetProjectServicesBase">
            <summary>
            Null-object with no-op implementation of project services.
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.NuGet.ProjectManagement.ProjectSystems.NuGetMsBuildProjectSystem.GetFullPaths(System.String)">
            <summary>
            Returns the list of full paths of all files in the project whose name is <paramref name="fileName"/>.
            </summary>
            <param name="fileName">The file name to search.</param>
            <returns>The list of full paths.</returns>
        </member>
        <member name="T:JetBrains.ProjectModel.NuGet.Restoring.INugetRestoreWaiter">
            <summary>
            It's only for manual testing.
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.Restoring.NuGetPackageRestoreResult.AlreadyRestored">
            <summary> There are no any packages that should be restored </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.Restoring.NuGetPackageRestoreResult.Complete">
            <summary> Some of the project packages were restored</summary>
        </member>
        <member name="F:JetBrains.ProjectModel.NuGet.Restoring.NuGetPackageRestoreResult.Error">
            <summary> NuGet API threw an exception during restore process</summary>
        </member>
        <member name="P:JetBrains.ProjectModel.NuGet.Unsorted.RestoreSession.Progress">
            <summary>
            Progress 0..1.
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.NuGet.Util.NuGetPackageSearchMetadataBuilder">
            <summary>
            Helper class allowing creation/alteration of immutable package metadata objects.
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.NuGet.Util.NuGetPackageSearchMetadataExtensions">
            <summary>
            Shortcut methods to create altered metadata objects with new versions.
            </summary>
        </member>
    </members>
</doc>
