<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.Platform.Symbols</name>
    </assembly>
    <members>
        <member name="T:JetBrains.Symbols.DefaultPdbCmdExecutionConfirmation">
            <summary>
            Default implementation which is required for the subsystem to be runnable on its own.
            Override in host-specific environments if needed.
            </summary>
        </member>
        <member name="T:JetBrains.Symbols.DefaultPdbSpecificLogger">
            <summary>
            Default implementation which is required for the subsystem to be runnable on its own.
            Override in host-specific environments for relevant logging mechanisms (e.g. to VS Output window).
            </summary>
        </member>
        <member name="T:JetBrains.Symbols.src.PdbFallbackResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:JetBrains.Symbols.src.PdbFallbackResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:JetBrains.Symbols.src.PdbFallbackResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="M:JetBrains.Symbols.Providers.ISymbolsProvider.DownloadPdbFile(JetBrains.Metadata.Debug.Pdb.IDebugAssemblyInfo,JetBrains.Application.Progress.IProgressIndicator)">
            <summary>
            Downloads symbols file for <paramref name="assemblyInfo"/>
            </summary>
            <exception cref="!:OperationCanceledException">on downloading cancelled by progress indicator</exception>
            <returns>true if the file was downloaded, false otherwise</returns>
        </member>
        <member name="T:JetBrains.Symbols.SourceLinkOrEmbeddedSourcesCache">
            <summary>
            Cache for unpacked sources (embedded into portable pdb)
            and sources downloaded from source server (for pdb with SourceLink)
            </summary>
        </member>
        <member name="P:JetBrains.Symbols.SourceLinkOrEmbeddedSourcesCache.CacheDirectory">
            <summary>
            Cache root folder
            </summary>
        </member>
        <member name="M:JetBrains.Symbols.SourceLinkOrEmbeddedSourcesCache.GetItemRelativePath(System.Guid,System.Int32,JetBrains.Util.FileSystemPath)">
            <summary>
            Path relative to cache folder
            (assembly MVID in hex)\(source index in hex)\(source short name)
            </summary>
        </member>
        <member name="M:JetBrains.Symbols.SourceLinkOrEmbeddedSourcesCache.TryGetSource(System.Guid,System.Int32,System.String,JetBrains.Util.FileSystemPath,JetBrains.Metadata.Utils.PE.Directories.DebugInfoType)">
            <summary>
            Gets cached source
            (null if source is not cached / is not embedded)
            </summary>
            <remarks>
            Embedded source can be extracted to cache,
            but can not be downloaded from source server
            </remarks>
        </member>
        <member name="M:JetBrains.Symbols.SourceLinkOrEmbeddedSourcesCache.TryGetSourceIndex(JetBrains.Util.FileSystemPath)">
            <summary>
            Source index based on cache folder structure or
            DebugDocument.NullDocumentIndex if cacheItemPath is not inside cache
            </summary>
        </member>
        <member name="M:JetBrains.Symbols.SourceLinkOrEmbeddedSourcesCache.GetSourceLinkPath(System.Guid)">
            <summary>
            SourceLink.json file path in cache for assembly 
            </summary>
        </member>
        <member name="T:JetBrains.Symbols.SymbolsCache.SymbolsCacheStructureUtil">
            <summary>
            File/folder structure of cache (inside symbols cache folder):
            pdbName.pdb/signature/pdbName.pdb
            (or pdbFileName/signature/pdbFileName, pdbFileName = pdbName.pdb)
            signature - pdb signature (Guid in hex) and age (int in hex)
            </summary>
        </member>
        <member name="M:JetBrains.Symbols.SymbolsCache.SymbolsCacheStructureUtil.GetPdbFilePath(JetBrains.Util.FileSystemPath,System.String,System.String)">
            <param name="rootFolder"></param>
            <param name="pdbFileName">pdb file name with extension</param>
            <param name="pdbSignature"></param>
            <returns></returns>
        </member>
        <member name="M:JetBrains.Symbols.SymbolsCache.SymbolsCacheStructureUtil.GetPdbFolderPath(JetBrains.Util.FileSystemPath,System.String,System.String)">
            <param name="rootFolder"></param>
            <param name="pdbFileName">pdb file name with extension</param>
            <param name="pdbSignature"></param>
            <returns></returns>
        </member>
        <member name="M:JetBrains.Symbols.SymbolsCache.SymbolsCacheStructureUtil.TryExtractPdbNameAndSignature(JetBrains.Util.FileSystemPath,System.String@,System.String@)">
            <param name="pdbPath"></param>
            <param name="pdbName">pdb file name without extension</param>
            <param name="pdbSignature"></param>
            <returns></returns>
        </member>
        <member name="P:JetBrains.Symbols.ISourcesCache.PrimaryCacheDir">
            <summary>
            Chosen directory to place downloaded sources
            </summary>
        </member>
        <member name="P:JetBrains.Symbols.SrcSrvSourcesCache.PrimaryCacheDir">
            <summary>
            Chosen directory to place downloaded sources
            </summary>
        </member>
        <member name="M:JetBrains.Symbols.ISourcesDownloader.Download(JetBrains.Metadata.Debug.Pdb.SrcSrv.SourceLocation,JetBrains.Util.FileSystemPath,JetBrains.Application.Progress.IProgressIndicator)">
            <summary>
             Downloads source file specified by <paramref name="sourceLocation" /> to <paramref name="cacheDirectory" />.
             Handles errors by itself
             </summary>
        </member>
        <member name="M:JetBrains.Symbols.ISymbolsDownloader.Download(JetBrains.Metadata.Debug.Pdb.IDebugAssemblyInfo,JetBrains.Symbols.SymbolsSource,JetBrains.Application.Progress.IProgressIndicator)">
            <summary>
             Downloads symbols for <paramref name="assemblyInfo" /> to <paramref name="symbolsSource" />,
             asks for specific pdbSignature instead of gettting it from <paramref name="assemblyInfo" />
             Handles errors by itself, overwrites existing files.
             </summary><returns>whether pdb was successfully downloaded and saved to designated location</returns>
        </member>
    </members>
</doc>
