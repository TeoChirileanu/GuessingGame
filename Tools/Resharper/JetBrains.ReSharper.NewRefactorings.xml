<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.NewRefactorings</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ReSharper.Refactorings.ChangeSignature.Impl.ChangeSignatureConflictSearcher">
            <summary>
            Searches conflicts when changing signature
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Refactorings.ChangeSignature.ChangeSignatureRefactoring">
            <summary>
            Change signature refactoring
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.ChangeStaticness.ToStatic.Model.ThisUsagesCollector.Expressions">
            <summary>
            Expression to present
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Refactorings.Common.DataModels.IValidationRule">
            <summary>
             Class for common validation rules to be used in data models for proper validation
             When creating new inheritor validation rule - check please that rule doesn't exist in 
             ValidationRulesManager and preferrably add it into it for further exploration ease
             </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Refactorings.InlineParameter.Impl.SubExpressionSearcher.myQualifier">
            <summary>
            Qualifier of invoced expression
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Refactorings.InlineParameter.Impl.SubExpressionSearcher.myHasThisQualifier">
            <summary>
            Qualifier of invoced expression is this (or omitted)
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Refactorings.MoveMembers.Common.MovedMemberInfo">
            <summary>
              Stores declared element even when it was removed.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.MoveMembers.Common.IImageCollector.GetMemberImages(JetBrains.ReSharper.Psi.IDeclaredElement,JetBrains.ReSharper.Psi.ITypeElement)">
            <summary>
            Return all images of a given type member.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Refactorings.MoveMembers.Util.MemberListDataProvider.mySelectedMembers">
            <summary>
            Selected members, eg 1,4,6
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Refactorings.MoveMembers.Util.MemberListDataProvider.myAbstract">
            <summary>
            Members selected abstract, eg 1,6
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.MoveMembers.Analysis.IMoveAnalyser.BaseClass2MemberInfosMap">
            <summary>
            Table of methods that should be declared abstract in the base classes.
            This is only actual for Pull Up refactoring.  
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.MoveTypeToOuterScope.IMoveTypeToOuterScope.NeedsTypeParameterOfOuterClass(JetBrains.ReSharper.Psi.ITypeParameter,JetBrains.ReSharper.Psi.Tree.IDeclaration)">
            <summary>
            STEP 2: Calculate new CLR name of a type, including its type parameters<br/>
             phase a: is given parameter of outer class needed in a body of new class?
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.MoveTypeToOuterScope.IMoveTypeToOuterScope.SaveLocalReferences(System.Collections.Generic.ICollection{JetBrains.ReSharper.Psi.Tree.IDeclaration})">
            <summary>
            STEP 4: Prepare to move; save information about references inside your declarations
            </summary>
            <param name="declarations"></param>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.MoveTypeToOuterScope.IMoveTypeToOuterScope.CutDeclaration(JetBrains.ReSharper.Psi.Tree.IDeclaration)">
            <summary>
            STEP 5a: Prepare to changing declarations
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.MoveTypeToOuterScope.IMoveTypeToOuterScope.PasteDeclarations(JetBrains.Util.Pair{JetBrains.ReSharper.Psi.Tree.IDeclaration,JetBrains.ReSharper.Psi.Tree.IDeclaration})">
            <summary>
            STEP 5b: Change declarations; resulting class should have correct CLR name as given by SetNewCLRName
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.MoveTypeToOuterScope.IMoveTypeToOuterScope.RestoreLocalReferences(System.Collections.Generic.ICollection{JetBrains.ReSharper.Psi.Tree.IDeclaration})">
            <summary>
            STEP 6: Restore references inside new declarations
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.MoveStaticMembers.MoveStaticMembersRefactoring.TryRemoveQualification(JetBrains.ReSharper.Psi.Resolve.IReference)">
            <remarks>Trying to not introduce new namespace using for non-user code</remarks>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Move.MoveToFolder.Impl.MoveToFolderHierarchyItem.CreatedProjectFile">
            <summary>
            Create project file for this item...
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Refactorings.Move.AdjustNamespaces.Impl.ClassPartsCollector.myFqnToElements">
            <summary>
            Element names collisions...
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Refactorings.Move.AdjustNamespaces.Impl.ClassPartsCollector.myDeclaredElementsToNamespaces">
            <summary>
            List of type parts with new namespaces...
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Refactorings.Move.AdjustNamespaces.Impl.ClassPartsCollector.myOutOfScopeParts">
            <summary>
            Elements having parts out of refactoring scope...
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Move.AdjustNamespaces.Impl.ClassPartsCollector.ImportedSymbols">
            <summary>
            Imported symbols of files are collected and then are explicitly inserted into new files.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Move.AdjustNamespaces.Impl.ClassPartsCollector.TopmostElements">
            <summary>
            Elements that can be used externally without qualifier...
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Refactorings.Rename.ParameterInOverloadRenameEvaluator">
            <summary>
            Correcponding parameter of overload.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Rename.IDerivedRenamesEvaluator.SuggestedElementsHaveDerivedName">
            <summary>
            This options controls if new name of related symbol should be derived from the name of the initial symbol.
            When it is 'false' the same name will be applied all related symbols of the evaluator.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Refactorings.Rename.Impl.NamespaceRenameConflictSearcher">
            <summary>
            Searches conflicts when renaming a namespace.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Refactorings.Rename.TypeRenameConflictSearcher">
            <summary>
            Searches conflicts when renaming type.
            
            There are only one kind of conflicts: there is already a type with this name
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.TransformParameters.SignatureGenerifier.BuildSubstitution(JetBrains.ReSharper.Psi.IType,JetBrains.ReSharper.Psi.IType)">
            <summary>
            Example:
            mostGenericType = List{T[], T1}
            specializedType = List{string[], U}
            result is T -> string, T1 -> U. 
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.PushPullTool.Fixes.FixFactory.Priority">
            <summary>
            The smaller the number, the higher fix's position in UI
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.Util.NewTypeImages.ResolveImagesRepository.Substitute(JetBrains.ReSharper.Psi.IType)">
            <summary>
            Use on your own risk. Source image should be valid! And type identity should be provided.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Refactorings.Util.ColdTypeMemberRenameConflictSearcher">
            <summary>
            Searches conflicts when renaming type member
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Refactorings.Workflow.RefactoringAction">
            <summary>
            Implements the standard action that spawns a refactoring.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Refactorings.Workflow.RefactoringAction.myAfterRefactoringExecuted">
            <summary>
            Executes after the refactoring completes successfully.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.Workflow.RefactoringAction.#ctor(System.Func{JetBrains.ProjectModel.ISolution,JetBrains.ReSharper.Feature.Services.Refactorings.IRefactoringWorkflow})">
            <summary>
            Inits with a functor that produces the refactoring workflow.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Workflow.RefactoringAction.AfterRefactoringExecuted">
            <summary>
            If non-Null, executes after the refactoring completes successfully.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.Workflow.RefactoringAction.Execute(JetBrains.Application.DataContext.IDataContext,JetBrains.Application.UI.Actions.DelegateExecute)">
            <summary>
            Executes action. Called after Update, that set ActionPresentation.Enabled to true.
            </summary>
            <param name="context">DataContext</param>
            <param name="nextExecute">delegate to call</param>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.Workflow.RefactoringAction.Update(JetBrains.Application.DataContext.IDataContext,JetBrains.Application.UI.Actions.ActionPresentation,JetBrains.Application.UI.Actions.DelegateUpdate)">
            <summary>
            Updates action visual presentation. If presentation.Enabled is set to false, Execute
            will not be called.
            </summary>
            <param name="context">DataContext</param>
            <param name="presentation">presentation to update</param>
            <param name="nextUpdate">delegate to call</param>
        </member>
        <member name="T:JetBrains.ReSharper.Refactorings.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.AdjustNamespacesPage_Description_No_files_were_found_with_inconsistent_namespaces">
            <summary>
              Looks up a localized string similar to No files were found with inconsistent namespaces.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.AdjustNamespacesPage_Description_Please_review_files_that_have_inconsistent_namespace_names">
            <summary>
              Looks up a localized string similar to Please review files that have inconsistent namespace names.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.AdjustNamespacesPage_Title_Inconsistent_files_review">
            <summary>
              Looks up a localized string similar to Inconsistent files review.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.AdjustNamespacesPage_Title_Nothing_to_fix">
            <summary>
              Looks up a localized string similar to Nothing to fix.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.Anonymous2DeclaredWindow_Description_Specify_parameters_of_new_type_declaration___">
            <summary>
              Looks up a localized string similar to Specify parameters of new type declaration....
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.Anonymous2DeclaredWindow_Title_Configure_type">
            <summary>
              Looks up a localized string similar to Configure type.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.ChangeSignaturePage_Description">
            <summary>
              Looks up a localized string similar to Specify new name, return type and parameters, then ensure that signature preview shows the correct signature..
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.ChangeSignaturePage_Title">
            <summary>
              Looks up a localized string similar to Define signature changes.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.CheckDeclarationsToMakePublicPage_Description">
            <summary>
              Looks up a localized string similar to Refactoring has detected that following types and members should be made public.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.CheckDeclarationsToMakePublicPage_Title">
            <summary>
              Looks up a localized string similar to Choose declarations to make public.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.ConflictsPage_Description">
            <summary>
              Looks up a localized string similar to ReSharper has found that the refactoring has some conflicts with the existing code. You can look through the list of conflicts and fix them by either manually editing code or choosing one of quickfixes if any are available.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.ConflictsPage_Description_CanNotExecute">
            <summary>
              Looks up a localized string similar to Refactoring can not be executed.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.ConflictsPage_Description_ReviewProblems">
            <summary>
              Looks up a localized string similar to Please review possible problems before executing refactorings.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.ConflictsPage_Title">
            <summary>
              Looks up a localized string similar to Conflicts were found.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.Constructor2FactoryMethodWindow_Description">
            <summary>
              Looks up a localized string similar to Specify options.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.Constructor2FactoryMethodWindow_Title">
            <summary>
              Looks up a localized string similar to Define factory method name and type where factory method should be created.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.CopyTypePage_Description">
            <summary>
              Looks up a localized string similar to Specify name of type copy and namespace to put it into..
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.CopyTypePage_Title">
            <summary>
              Looks up a localized string similar to Options.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.EncapsulateFieldPage_Description">
            <summary>
              Looks up a localized string similar to Specify name and modifiers of the new property.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.EncapsulateFieldPage_Title">
            <summary>
              Looks up a localized string similar to Options.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.ExtractClassFromParamsControl_Description">
            <summary>
              Looks up a localized string similar to Select parameters to wrap and define extracted type properties.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.ExtractClassFromParamsControl_Title">
            <summary>
              Looks up a localized string similar to Specify options.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.ExtractInterfaceWindow_Description">
            <summary>
              Looks up a localized string similar to that you want to move to base type.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.ExtractInterfaceWindow_Title">
            <summary>
              Looks up a localized string similar to Select base type and members.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.ExtractMethodPage_Description">
            <summary>
              Looks up a localized string similar to Enter name of the method to be created and change signature if needed..
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.ExtractMethodPage_Title">
            <summary>
              Looks up a localized string similar to Options.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.ExtractSuperclassWindow_Description">
            <summary>
              Looks up a localized string similar to and members that you want to pull into this class.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.ExtractSuperclassWindow_Title">
            <summary>
              Looks up a localized string similar to Specify base type name.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.InlineMethodWindow_Description">
            <summary>
              Looks up a localized string similar to for inlining {0}.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.InlineMethodWindow_Title">
            <summary>
              Looks up a localized string similar to Specify options.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.IntroduceParameterWindow_Description">
            <summary>
              Looks up a localized string similar to and other options.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.IntroduceParameterWindow_Title">
            <summary>
              Looks up a localized string similar to Specify parameter name.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.IntroFieldWindow_Description">
            <summary>
              Looks up a localized string similar to of the introduced field and define its modifiers.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.IntroFieldWindow_Title">
            <summary>
              Looks up a localized string similar to Specify name.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.MakeMethodNonStaticPage_Description">
            <summary>
              Looks up a localized string similar to Select method instance parameter .
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.MakeMethodNonStaticPage_Title">
            <summary>
              Looks up a localized string similar to Specify options.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.MakeStaticPage_Description">
            <summary>
              Looks up a localized string similar to Define how to transform usages of instance members.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.MakeStaticPage_Title">
            <summary>
              Looks up a localized string similar to Specify Options.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.MoveFileRemoveEmptyFilePage_Description">
            <summary>
              Looks up a localized string similar to Source file contains no more declarations.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.MoveFileRemoveEmptyFilePage_Title">
            <summary>
              Looks up a localized string similar to Remove empty files?.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.MoveIntoMatchingFilesPage_Description">
            <summary>
              Looks up a localized string similar to Specify declarations that should be moved into the separate files.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.MoveIntoMatchingFilesPage_Title">
            <summary>
              Looks up a localized string similar to Options.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.MoveStaticMembersControl_Description">
            <summary>
              Looks up a localized string similar to and members that you want to move into target type.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.MoveStaticMembersControl_Title">
            <summary>
              Looks up a localized string similar to Specify target type.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.MoveToFilePage_Description">
            <summary>
              Looks up a localized string similar to Specify name of new or existing file.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.MoveToFilePage_Title">
            <summary>
              Looks up a localized string similar to Specify name of file.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.MoveToNamespacePage_Description">
            <summary>
              Looks up a localized string similar to 
             .
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.MoveToNamespacePage_Title">
            <summary>
              Looks up a localized string similar to Specify namespace.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.MoveTypeToOuterScopePage_Description">
            <summary>
              Looks up a localized string similar to (if you want it to be different).
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.MoveTypeToOuterScopePage_Title">
            <summary>
              Looks up a localized string similar to Specify name.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.Property2FunctionWindow_Description">
            <summary>
              Looks up a localized string similar to that you want to create and specify names.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.Property2FunctionWindow_Title">
            <summary>
              Looks up a localized string similar to Check accessors.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.PushDownWindow_Description">
            <summary>
              Looks up a localized string similar to and members that you want to push to derived classes.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.PushDownWindow_Title">
            <summary>
              Looks up a localized string similar to Choose inheritors.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.RenameDerived_Title">
            <summary>
              Looks up a localized string similar to Rename Related Symbols.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.RenameDerived_Title_UsageChanged">
            <summary>
              Looks up a localized string similar to {0} usage was changed. .
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.RenameDerived_Title_UsagesChanged">
            <summary>
              Looks up a localized string similar to {0} usages were changed. .
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.RenameDerivedElementsPage_Description">
            <summary>
              Looks up a localized string similar to There are declarations that seem to have names related to the name of the type to be renamed. You can change their names to match the new type name. You can agree to the suggested names or edit them by clicking on the new name cells..
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.RenameInitialControl_Description">
            <summary>
              Looks up a localized string similar to to the {0}.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.RenameInitialControl_Title">
            <summary>
              Looks up a localized string similar to sdf.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.RenameMainForm_Title">
            <summary>
              Looks up a localized string similar to Give a new name.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.RenameNamespaceControl_Description">
            <summary>
              Looks up a localized string similar to for namespace {0}..
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.RenameNamespaceControl_Title">
            <summary>
              Looks up a localized string similar to Specify New Name.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.SafeDeleteFolderPage_Description">
            <summary>
              Looks up a localized string similar to Refactoring will show you usages of the removed code and then remove files.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.SafeDeleteFolderPage_Title">
            <summary>
              Looks up a localized string similar to Confirm Remove.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.SafeDeletePage2TypeElement_Description">
            <summary>
              Looks up a localized string similar to {0} has inheritors. Would you like to delete the whole hierarchy?.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.SafeDeletePage2TypeElement_Title">
            <summary>
              Looks up a localized string similar to Delete hierarchy?.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.SafeDeletePageOverridableMember_Description">
            <summary>
              Looks up a localized string similar to {0} is a member of hierarchy. What members do you want to delete?.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.SafeDeletePageOverridableMember_Title">
            <summary>
              Looks up a localized string similar to Remove overrides?.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.SafeDeletePageReplaceTypeUsages_Description">
            <summary>
              Looks up a localized string similar to There are usages.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.SafeDeletePageReplaceTypeUsages_Title">
            <summary>
              Looks up a localized string similar to of {0}. Specify how to treat these usages..
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.SafeDeleteRemoveFilesConfirmation_Description">
            <summary>
              Looks up a localized string similar to Some files may become empty. Refactoring may optionally remove these files..
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.SafeDeleteRemoveFilesConfirmation_Title">
            <summary>
              Looks up a localized string similar to Remove empty files?.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.SelectTypePartWindow_Description">
            <summary>
              Looks up a localized string similar to where you want to put members.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.SelectTypePartWindow_Title">
            <summary>
              Looks up a localized string similar to Choose declaration of {0}.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.TextualChangesPage_Description">
            <summary>
              Looks up a localized string similar to ReSharper has found some textual occurrences in comments and string literals which might .
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.TextualChangesPage_Title">
            <summary>
              Looks up a localized string similar to Usages in Comments and String Literals.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.TransformOutParameters_Description">
            <summary>
              Looks up a localized string similar to Choose out parameters  to transform.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.TransformOutParameters_Title">
            <summary>
              Looks up a localized string similar to Transform out parameters.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.TypeSuggestionPage_Description">
            <summary>
              Looks up a localized string similar to You have entered types in the change signature dialog which cannot be resolved or resolved ambiguously. Please choose exact types in the table below or check which types cannot be resolved..
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.TypeSuggestionPage_Title_Specify_unresolved_types">
            <summary>
              Looks up a localized string similar to Specify unresolved types.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.UseBaseTypeMainWindow_Description">
            <summary>
              Looks up a localized string similar to that you want to use instead of original.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.UseBaseTypeMainWindow_Title">
            <summary>
              Looks up a localized string similar to Select base type.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.VBFunction2PropertyPage_Description">
            <summary>
              Looks up a localized string similar to of the new property.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Refactorings.Properties.Resources.VBFunction2PropertyPage_Title">
            <summary>
              Looks up a localized string similar to Specify name.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Refactorings.Conflicts.CompositeConflictSearcher">
            <summary>
            Composites multiple conflict searchers
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Refactorings.Conflicts.NewLocalElementConflictSearcher">
            <summary>
            Searches conflicts caused by adding a new local declaration
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Refactorings.Conflicts.TypeMemberQualifier">
            <summary>
            Remembers all references to type members in a scope and resurrects the broken ones by qualifying them
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Refactorings.ILanguageSpecificRefactoringService">
            <summary>
            Tag interface for all language-specific refactroing services
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons">
             <summary>
            	<para>
            		<para>Autogenerated identifier classes and identifier objects to Themed Icons registered with <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see>.</para>
            		<para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected, use the identifier object in the <c>Id</c> field of the identifier class.</para>
            	</para>
            </summary>
            <remarks>
            	<para>This code was compile-time generated to support Themed Icons in the JetBrains application.</para>
            	<para>It has two primary goals: load the icons of this assembly to be registered with <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> so that they were WPF-accessible and theme-sensitive; and emit early-bound accessors for referencing icons in codebehind in a compile-time-validated manner.</para>
            	<h1>XAML</h1>
            	<para>For performance reasons, the icons are not individually exposed with application resources. There is a custom markup extension to bind an image source in markup.</para>
            	<para>To use an icon from XAML, set an <see cref="T:System.Windows.Media.ImageSource"></see> property to the <see cref="T:System.CodeDom.CodeTypeReference"></see> markup extension, which takes an icon identifier class (nested in <see cref="T:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons"></see> class) as a parameter.</para>
            	<para>Example:</para>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:RefactoringsThemedIcons+Trinity}" /&gt;</code>
            	<h1>Attributes</h1>
            	<para>Sometimes you have to reference an icon from a type attriute when you're defining objects in code. Typical examples are Options pages and Tool Windows.</para>
            	<para>To avoid the use of string IDs which are not validated very well, we've emitted identifier classes to be used with <c>typeof()</c> expression, one per each icon. Use the attribute overload which takes a <see cref="T:System.Type"></see> for an image, and choose your icon class from nested classes in the <see cref="T:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons"></see> class.</para>
            	<para>Example:</para>
            	<code>[Item(Name="Sample", Icon=typeof(RefactoringsThemedIcons.Trinity))]</code>
            	<h1>CodeBehind</h1>
            	<para>In codebehind, we have two distinct tasks: (a) specify some icon in the APIs and (b) render icon images onscreen.</para>
            	<para>On the APIs stage you should only manipulate icon identifier objects (of type <see cref="T:JetBrains.UI.Icons.IconId"></see>, statically defined in <see cref="T:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons"></see> in <c>Id</c> fields). Icon identifier classes (nested in <see cref="T:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons"></see>) should be turned into icon identifier objects as early as possible. Rendering is about getting an <see cref="T:System.Windows.Media.ImageSource"></see> to assign to WPF, or <see cref="T:System.Drawing.Bitmap"></see> to use with GDI+ / Windows Forms.</para>
            	<para>You should turn an identifier object into a rendered image as late as possible. The identifier is static and lightweight and does not depend on the current theme, while the image is themed and has to be loaded or generated/rasterized. You need an <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> instance to get the image out of an icon identifier object. Once you got the image, you should take care to change it with theme changes — either by using a live image property, or by listening to the theme change event. See <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> and its extensions for the related facilities.</para>
            	<para>Example:</para>
            	<code>// Getting IconId identifier object to use with APIs
            IconId iconid = RefactoringsThemedIcons.Trinity.Id;</code>
            	<code>// Getting IconId out of an Icon Identifier Class type
            IconId iconid = new JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsId(typeof(RefactoringsThemedIcons.Trinity));</code>
            	<code>// Getting image for screen rendering by IconId
            themediconmanager.Icons[icnoid]</code>
            	<code>// Getting image for screen rendering by Icon Identifier Class
            themediconmanager.GetIcon&lt;RefactoringsThemedIcons.Trinity&gt;()</code>
            	<h1>Icons Origin</h1>
            	<para>This code was generated by a pre-compile build task from a set of input files which are XAML files adhering to a certain convention, as convenient for exporting them from the Illustrator workspace, plus separate PNG files with raster icons. In the projects, these files are designated with <c>ThemedIconsXamlV3</c> and <c>ThemedIconPng</c> build actions and do not themselves get into the output assembly. All of such files are processed, vector images for different themes of the same icon are split and combined into the single list of icons in this assembly. This list is then written into the genearted XAML file (compiled into BAML within assembly), and serves as the source for this generated code.</para>
            </remarks>
        </member>
        <member name="T:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.RefactorThis">
             <summary>
            	<para>
            		<para>RefactorThis Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.RefactorThis"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.RefactorThis.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                          lmmmmI`            
                        `oRT_-+Ok.           
                       .U#r_.~-~Hb_          
                      :Gd!,` /=-,XR~         
                     =R9=",  /!=--SD+        
                    ?Dk~"",  /!!='`tDJ       
                  `CDu~^"",  /!!=~-`rD5`     
                 `kDl~~^"",  /!!==~-`=R6'    
                -dD)=~~^"",  /!!==~^- _AR:   
               "DRr==~~^"",  /!!==~^"- .68=  
              !8b/===~~^"",  /!!==~^",-  28? 
             T%P!====~~^"",  /!!==~^",_.  i%[
             U%AaJ+==~~^"",  /!!==~:-` `~T4W6
              `,r58DZt+~"",  /!~:-`:+1O8Vc"` 
                   -/1#89C+"_-_=Tk8Do+_      
                       .=JwBBBBHt;-          
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:RefactoringsThemedIcons+RefactorThis}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(RefactoringsThemedIcons.RefactorThis))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = RefactoringsThemedIcons.RefactorThis.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;RefactoringsThemedIcons.RefactorThis&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.RefactorThis.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.RefactorThis">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.RefactorThis.Load_Color">
            <summary>Loads the image for Themed Icon RefactorThis theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.RefactorThis.Load_Gray">
            <summary>Loads the image for Themed Icon RefactorThis theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.RefactorThis.Load_GrayDark">
            <summary>Loads the image for Themed Icon RefactorThis theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.RefactorThis.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon RefactorThis.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.Subexpression">
             <summary>
            	<para>
            		<para>Subexpression Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.Subexpression"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.Subexpression.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                        `^)||||||            
                      `~|+-   ^T/            
                    `~T+_````+7^             
                  `~7?_````_|JJJJJJJJJJJJJJ  
                 ~iL"....................ll  
                 /tr:--------------------tt  
                  .*{?"----=t{{{{{{{{{{{{{{  
                    .+xc^___^JF"             
                      .+I|~,,")I*            
                        .ruuuuuuu            
                                             
             kkT.`;|CxT!``;|CxT!``;|CxT!``ckk
             99oXEk=.`^5XEk=.`^5XEk=.`^5XES99
             OO`55` ll `55` ll `55` ll `55`OO
             DD,  _SDDX"  _SDDX"  _SDDX"  ,DD
             .)HM%bx-'}w8%bx-'}w8%bx-'}w8MAl_
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:RefactoringsThemedIcons+Subexpression}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(RefactoringsThemedIcons.Subexpression))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = RefactoringsThemedIcons.Subexpression.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;RefactoringsThemedIcons.Subexpression&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.Subexpression.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.Subexpression">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.Subexpression.Load_Color">
            <summary>Loads the image for Themed Icon Subexpression theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.Subexpression.Load_Gray">
            <summary>Loads the image for Themed Icon Subexpression theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.Subexpression.Load_GrayDark">
            <summary>Loads the image for Themed Icon Subexpression theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Refactorings.Resources.RefactoringsThemedIcons.Subexpression.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon Subexpression.</summary>
        </member>
    </members>
</doc>
